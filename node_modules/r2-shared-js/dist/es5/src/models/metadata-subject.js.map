{"version":3,"file":"metadata-subject.js","sourceRoot":"","sources":["../../../../src/models/metadata-subject.ts"],"names":[],"mappings":";;;;AAQA,uCAAsF;AAGtF,uDAA0C;AAE1C,IAAM,eAAe,GAAG,OAAO,CAAC;AAMhC;IAAA;IAsCA,CAAC;IA7BG,sBAAI,2BAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QACtD,CAAC;aACD,UAAW,MAA0B;YACjC,IAAI,MAAM,EAAE,CAAC;gBACT,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAC1B,CAAC;QACL,CAAC;;;OANA;IAsBS,iCAAe,GAAf;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAlCM;QADN,IAAA,wBAAY,EAAC,MAAM,CAAC;;yCACa;IAG3B;QADN,IAAA,wBAAY,EAAC,QAAQ,CAAC;;4CACC;IAEjB;QADN,IAAA,wBAAY,EAAC,SAAS,CAAC;;4CACW;IAY5B;QADN,IAAA,wBAAY,EAAC,QAAQ,CAAC;;2CACA;IAGhB;QADN,IAAA,wBAAY,EAAC,MAAM,CAAC;;yCACA;IAId;QAFN,IAAA,wBAAY,EAAC,eAAe,CAAC;QAC7B,IAAA,2BAAe,EAAC,uBAAI,CAAC;;0CACA;IAMZ;QAJT,IAAA,0BAAc,GAAE;;;;kDAQhB;IArCQ,OAAO;QADnB,IAAA,sBAAU,GAAE;OACA,OAAO,CAsCnB;IAAD,cAAC;CAAA,AAtCD,IAsCC;AAtCY,0BAAO","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// https://github.com/edcarroll/ta-json\nimport { JsonElementType, JsonObject, JsonProperty, OnDeserialized } from \"ta-json-x\";\n\nimport { IStringMap } from \"./metadata-multilang\";\nimport { Link } from \"./publication-link\";\n\nconst LINKS_JSON_PROP = \"links\";\n\n// TODO: not in JSON Schema?? https://github.com/readium/webpub-manifest/issues/13\n// tslint:disable-next-line:max-line-length\n// https://github.com/readium/webpub-manifest/blob/0976680e25852b8a4c4802a052ba750ab3e89284/schema/metadata.schema.json\n@JsonObject()\nexport class Subject {\n\n    @JsonProperty(\"name\")\n    public Name!: string | IStringMap;\n\n    @JsonProperty(\"sortAs\")\n    public SortAs2!: string;\n    @JsonProperty(\"sort_as\")\n    public SortAs1: string | undefined;\n    get SortAs(): string | undefined {\n        return this.SortAs2 ? this.SortAs2 : this.SortAs1;\n    }\n    set SortAs(sortas: string | undefined) {\n        if (sortas) {\n            this.SortAs1 = undefined;\n            this.SortAs2 = sortas;\n        }\n    }\n\n    @JsonProperty(\"scheme\")\n    public Scheme!: string;\n\n    @JsonProperty(\"code\")\n    public Code!: string;\n\n    @JsonProperty(LINKS_JSON_PROP)\n    @JsonElementType(Link)\n    public Links!: Link[];\n\n    @OnDeserialized()\n    // tslint:disable-next-line:no-unused-variable\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\n    protected _OnDeserialized() {\n        if (!this.Name) {\n            console.log(\"Subject.Name is not set!\");\n        }\n    }\n}\n"]}