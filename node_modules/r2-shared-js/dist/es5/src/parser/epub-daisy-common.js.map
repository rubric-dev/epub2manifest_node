{"version":3,"file":"epub-daisy-common.js","sourceRoot":"","sources":["../../../../src/parser/epub-daisy-common.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\nimport * as mime from \"mime-types\";\nimport * as moment from \"moment\";\nimport * as path from \"path\";\nimport * as xmldom from \"@xmldom/xmldom\";\n\nimport { MediaOverlayNode, timeStrToSeconds } from \"@models/media-overlay\";\nimport { DirectionEnum, MetadataSupportedKeys } from \"@models/metadata\";\nimport { Contributor } from \"@models/metadata-contributor\";\nimport { MediaOverlay } from \"@models/metadata-media-overlay\";\nimport { IStringMap } from \"@models/metadata-multilang\";\nimport { LayoutEnum, Properties } from \"@models/metadata-properties\";\nimport { Subject } from \"@models/metadata-subject\";\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { DelinearizeAccessModeSufficient } from \"@models/ta-json-string-tokens-converter\";\nimport { encodeURIComponent_RFC3986 } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport { streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { XML } from \"@r2-utils-js/_utils/xml-js-mapper\";\nimport { IStreamAndLength, IZip } from \"@r2-utils-js/_utils/zip/zip\";\nimport { Transformers } from \"@transform/transformer\";\n\nimport { zipHasEntry } from \"../_utils/zipHasEntry\";\nimport { Rootfile } from \"./epub/container-rootfile\";\nimport { NCX } from \"./epub/ncx\";\nimport { NavLabel } from \"./epub/ncx-navlabel\";\nimport { NavPoint } from \"./epub/ncx-navpoint\";\nimport { OPF } from \"./epub/opf\";\nimport { Author } from \"./epub/opf-author\";\nimport { Manifest } from \"./epub/opf-manifest\";\nimport { Metafield } from \"./epub/opf-metafield\";\nimport { Title } from \"./epub/opf-title\";\nimport { SMIL } from \"./epub/smil\";\nimport { Par } from \"./epub/smil-par\";\nimport { Seq } from \"./epub/smil-seq\";\nimport { SeqOrPar } from \"./epub/smil-seq-or-par\";\nimport { MetaDate } from \"./epub/opf-date\";\nimport { AccessibilityMetadata } from \"@models/metadata-accessibility\";\nimport { AccessibilityCertification } from \"@models/metadata-accessibility-certification\";\nimport { removeUTF8BOM } from \"@r2-utils-js/_utils/bom\";\n\nconst debug = debug_(\"r2:shared#parser/epub-daisy-common\");\n\nconst epub3 = \"3.0\";\nconst epub301 = \"3.0.1\";\nconst epub31 = \"3.1\";\n// const epub2 = \"2.0\";\n// const epub201 = \"2.0.1\";\n\nexport const mediaOverlayURLPath = \"media-overlay.json\";\nexport const mediaOverlayURLParam = \"resource\";\n\n// https://github.com/readium/webpub-manifest/issues/52#issuecomment-601686135\nexport const BCP47_UNKNOWN_LANG = \"und\";\n\nexport const parseSpaceSeparatedString = (str: string | undefined | null): string[] => {\n    return str ? str.trim().split(\" \").map((role) => {\n        return role.trim();\n    }).filter((role) => {\n        return role.length > 0;\n    }) : [];\n};\n\nconst getEpubVersion = (rootfile: Rootfile, opf: OPF): string | undefined => {\n\n    if (rootfile.Version) {\n        return rootfile.Version;\n    } else if (opf.Version) {\n        return opf.Version;\n    }\n\n    return undefined;\n};\n\nexport const isEpub3OrMore = (rootfile: Rootfile, opf: OPF): boolean => {\n\n    const version = getEpubVersion(rootfile, opf);\n    return (version === epub3 || version === epub301 || version === epub31);\n};\n\nexport const fillPublicationDate = (publication: Publication, rootfile: Rootfile | undefined, opf: OPF) => {\n\n    let publishedDateStr: string | undefined;\n    let modifiedDateStr: string | undefined;\n\n    if (opf.Metadata?.Meta?.length) {\n        for (const m of opf.Metadata.Meta) {\n            if (m.Name === \"dcterms:modified\" && m.Content) {\n                modifiedDateStr = m.Content;\n                break;\n            }\n            if (m.Property === \"dcterms:modified\" && m.Data) {\n                modifiedDateStr = m.Data;\n                break;\n            }\n        }\n    }\n\n    const opfMetadataDateArray = ([] as MetaDate[]).concat(\n        opf.Metadata?.DCMetadata?.Date?.length ? opf.Metadata.DCMetadata.Date : [],\n        opf.Metadata?.Date?.length ? opf.Metadata.Date : [],\n    );\n    if (opfMetadataDateArray?.length) {\n        for (const metaDate of opfMetadataDateArray) {\n            if (!modifiedDateStr &&\n                (metaDate.Event === \"modification\" || metaDate.Event === \"ops-modification\")) {\n                modifiedDateStr = metaDate.Data;\n            }\n            if (!publishedDateStr &&\n                (metaDate.Event === \"publication\" || metaDate.Event === \"ops-publication\")) {\n                publishedDateStr = metaDate.Data;\n                // <dc:date opf:event=\"original-publication\">1860</dc:date>\n                // <dc:date opf:event=\"ops-publication\">2008-03-11</dc:date>\n            }\n            if (modifiedDateStr && publishedDateStr) {\n                break;\n            }\n        }\n        // fallback 1: first date without explicit OPF \"event\" (EPUB2)\n        if (!publishedDateStr) {\n            for (const metaDate of opfMetadataDateArray) {\n                if (!metaDate.Event) {\n                    publishedDateStr = metaDate.Data;\n                    // <dc:date>1860</dc:date>\n                    break;\n                }\n            }\n        }\n        // fallback 2: first date in OPF XML (EPUB3)\n        if (!publishedDateStr) {\n            if (!rootfile || isEpub3OrMore(rootfile, opf)) {\n                publishedDateStr = opfMetadataDateArray[0].Data;\n            }\n        }\n    }\n\n    if (publishedDateStr) {\n        try {\n            const mom = moment(publishedDateStr);\n            if (mom.isValid()) {\n                publication.Metadata.PublicationDate = mom.toDate();\n            }\n        } catch (_err) {\n            debug(\"INVALID published DATE/TIME? \" + publishedDateStr);\n        }\n    }\n\n    if (modifiedDateStr) {\n        try {\n            const mom = moment(modifiedDateStr);\n            if (mom.isValid()) {\n                publication.Metadata.Modified = mom.toDate();\n            }\n        } catch (_err) {\n            debug(\"INVALID modified DATE/TIME? \" + modifiedDateStr);\n        }\n    }\n};\n\nexport const fillSubject = (publication: Publication, opf: OPF) => {\n\n    const opfMetadataSubject =\n        opf.Metadata?.DCMetadata?.Subject?.length ?\n            opf.Metadata.DCMetadata.Subject :\n            (opf.Metadata?.Subject?.length ?\n                opf.Metadata.Subject :\n                undefined);\n\n    if (opfMetadataSubject) {\n        opfMetadataSubject.forEach((s) => {\n            const sub = new Subject();\n\n            const xmlLang: string = s.Lang || opf.Lang;\n            const isLangOverride = s.Lang && opf.Lang && s.Lang !== opf.Lang;\n            if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n                sub.Name = {} as IStringMap;\n                sub.Name[xmlLang.toLowerCase()] = s.Data;\n            } else {\n                sub.Name = s.Data;\n            }\n            sub.Code = s.Term;\n            sub.Scheme = s.Authority;\n            if (!publication.Metadata.Subject) {\n                publication.Metadata.Subject = [];\n            }\n            publication.Metadata.Subject.push(sub);\n        });\n    }\n};\n\nexport const findContributorInMeta = (publication: Publication, rootfile: Rootfile | undefined, opf: OPF) => {\n    if (!rootfile || isEpub3OrMore(rootfile, opf)) {\n        const func = (meta: Metafield) => {\n            if (meta.Property === \"dcterms:creator\" || meta.Property === \"dcterms:contributor\") {\n                const cont = new Author();\n                cont.Data = meta.Data;\n                cont.ID = meta.ID;\n                addContributor(publication, rootfile, opf, cont, undefined);\n            }\n        };\n        if (opf.Metadata?.XMetadata?.Meta?.length) {\n            opf.Metadata.XMetadata.Meta.forEach(func);\n        }\n        if (opf.Metadata?.Meta?.length) {\n            opf.Metadata.Meta.forEach(func);\n        }\n    }\n};\n\nexport const addContributor = (\n    publication: Publication, rootfile: Rootfile | undefined,\n    opf: OPF, cont: Author, forcedRole: string | undefined) => {\n\n    const contributor = new Contributor();\n    let role: string | undefined;\n\n    // const epubVersion = getEpubVersion(rootfile, opf);\n\n    if (rootfile && isEpub3OrMore(rootfile, opf)) {\n\n        if (cont.FileAs) {\n            contributor.SortAs = cont.FileAs;\n        } else {\n            const metaFileAs = findMetaByRefineAndProperty(opf, cont.ID, \"file-as\");\n            if (metaFileAs && metaFileAs.Property === \"file-as\") {\n                contributor.SortAs = metaFileAs.Data;\n            }\n        }\n\n        const metaRole = findMetaByRefineAndProperty(opf, cont.ID, \"role\");\n        if (metaRole && metaRole.Property === \"role\") {\n            role = metaRole.Data;\n        }\n        if (!role && forcedRole) {\n            role = forcedRole;\n        }\n\n        const metaAlt = findAllMetaByRefineAndProperty(opf, cont.ID, \"alternate-script\");\n        if (metaAlt && metaAlt.length) {\n            contributor.Name = {} as IStringMap;\n\n            metaAlt.forEach((m) => {\n                if (m.Lang) {\n                    (contributor.Name as IStringMap)[m.Lang.toLowerCase()] = m.Data;\n                }\n            });\n\n            // https://github.com/readium/architecture/blob/master/streamer/parser/metadata.md#title\n            const xmlLang: string = cont.Lang || opf.Lang;\n            if (xmlLang) {\n                contributor.Name[xmlLang.toLowerCase()] = cont.Data;\n            } else if (publication.Metadata &&\n                publication.Metadata.Language &&\n                publication.Metadata.Language.length &&\n                !contributor.Name[publication.Metadata.Language[0].toLowerCase()]) {\n                contributor.Name[publication.Metadata.Language[0].toLowerCase()] = cont.Data;\n            } else {\n                // tslint:disable-next-line: no-string-literal\n                contributor.Name[BCP47_UNKNOWN_LANG] = cont.Data;\n            }\n        } else {\n            const xmlLang: string = cont.Lang || opf.Lang;\n            const isLangOverride = cont.Lang && opf.Lang && cont.Lang !== opf.Lang;\n            if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n                contributor.Name = {} as IStringMap;\n                contributor.Name[xmlLang.toLowerCase()] = cont.Data;\n            } else {\n                contributor.Name = cont.Data;\n            }\n        }\n    } else {\n        const xmlLang: string = cont.Lang || opf.Lang;\n        const isLangOverride = cont.Lang && opf.Lang && cont.Lang !== opf.Lang;\n        if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n            contributor.Name = {} as IStringMap;\n            contributor.Name[xmlLang.toLowerCase()] = cont.Data;\n        } else {\n            contributor.Name = cont.Data;\n        }\n        role = cont.Role;\n        if (!role && forcedRole) {\n            role = forcedRole;\n        }\n    }\n\n    if (role) {\n        switch (role) {\n            case \"aut\": {\n                if (!publication.Metadata.Author) {\n                    publication.Metadata.Author = [];\n                }\n                publication.Metadata.Author.push(contributor);\n                break;\n            }\n            case \"trl\": {\n                if (!publication.Metadata.Translator) {\n                    publication.Metadata.Translator = [];\n                }\n                publication.Metadata.Translator.push(contributor);\n                break;\n            }\n            case \"art\": {\n                if (!publication.Metadata.Artist) {\n                    publication.Metadata.Artist = [];\n                }\n                publication.Metadata.Artist.push(contributor);\n                break;\n            }\n            case \"edt\": {\n                if (!publication.Metadata.Editor) {\n                    publication.Metadata.Editor = [];\n                }\n                publication.Metadata.Editor.push(contributor);\n                break;\n            }\n            case \"ill\": {\n                if (!publication.Metadata.Illustrator) {\n                    publication.Metadata.Illustrator = [];\n                }\n                publication.Metadata.Illustrator.push(contributor);\n                break;\n            }\n            case \"ltr\": {\n                if (!publication.Metadata.Letterer) {\n                    publication.Metadata.Letterer = [];\n                }\n                publication.Metadata.Letterer.push(contributor);\n                break;\n            }\n            case \"pen\": {\n                if (!publication.Metadata.Penciler) {\n                    publication.Metadata.Penciler = [];\n                }\n                publication.Metadata.Penciler.push(contributor);\n                break;\n            }\n            case \"clr\": {\n                if (!publication.Metadata.Colorist) {\n                    publication.Metadata.Colorist = [];\n                }\n                publication.Metadata.Colorist.push(contributor);\n                break;\n            }\n            case \"ink\": {\n                if (!publication.Metadata.Inker) {\n                    publication.Metadata.Inker = [];\n                }\n                publication.Metadata.Inker.push(contributor);\n                break;\n            }\n            case \"nrt\": {\n                if (!publication.Metadata.Narrator) {\n                    publication.Metadata.Narrator = [];\n                }\n                publication.Metadata.Narrator.push(contributor);\n                break;\n            }\n            case \"pbl\": {\n                if (!publication.Metadata.Publisher) {\n                    publication.Metadata.Publisher = [];\n                }\n                publication.Metadata.Publisher.push(contributor);\n                break;\n            }\n            default: {\n                contributor.Role = [role];\n\n                if (!publication.Metadata.Contributor) {\n                    publication.Metadata.Contributor = [];\n                }\n                publication.Metadata.Contributor.push(contributor);\n            }\n        }\n    }\n};\n\nexport const findMetaByRefineAndProperty = (opf: OPF, ID: string, property: string): Metafield | undefined => {\n\n    const ret = findAllMetaByRefineAndProperty(opf, ID, property);\n    if (ret.length) {\n        return ret[0];\n    }\n    return undefined;\n};\n\nexport const findAllMetaByRefineAndProperty = (opf: OPF, ID: string, property: string): Metafield[] => {\n\n    const metas: Metafield[] = [];\n\n    const refineID = \"#\" + ID;\n\n    const func = (metaTag: Metafield) => {\n        if (metaTag.Refine === refineID && metaTag.Property === property) {\n            metas.push(metaTag);\n        }\n    };\n    if (opf.Metadata?.XMetadata?.Meta?.length) {\n        opf.Metadata.XMetadata.Meta.forEach(func);\n    }\n    if (opf.Metadata?.Meta?.length) {\n        opf.Metadata.Meta.forEach(func);\n    }\n\n    return metas;\n};\n\nexport const findInSpineByHref = (publication: Publication, href: string): Link | undefined => {\n\n    if (publication.Spine && publication.Spine.length) {\n        const ll = publication.Spine.find((l) => {\n            if (l.HrefDecoded === href) {\n                return true;\n            }\n            return false;\n        });\n        if (ll) {\n            return ll;\n        }\n    }\n\n    return undefined;\n};\n\ntype FuncType = (\n    publication: Publication, rootfile: Rootfile | undefined,\n    opf: OPF, zip: IZip, linkItem: Link, item: Manifest) => Promise<void>;\n\nexport const findInManifestByID = async (\n    publication: Publication, rootfile: Rootfile | undefined, opf: OPF, ID: string, zip: IZip,\n    addLinkData: FuncType): Promise<Link> => {\n\n    if (opf.Manifest && opf.Manifest.length) {\n        const item = opf.Manifest.find((manItem) => {\n            if (manItem.ID === ID) {\n                return true;\n            }\n            return false;\n        });\n        if (item && opf.ZipPath) {\n            const linkItem = new Link();\n            linkItem.TypeLink = item.MediaType;\n\n            const itemHrefDecoded = item.HrefDecoded;\n            if (!itemHrefDecoded) {\n                // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                return Promise.reject(\"item.Href?!\");\n            }\n            linkItem.setHrefDecoded(path.join(path.dirname(opf.ZipPath), itemHrefDecoded)\n                .replace(/\\\\/g, \"/\"));\n\n            await addLinkData(publication, rootfile, opf, zip, linkItem, item);\n\n            return linkItem;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n    return Promise.reject(`ID ${ID} not found`);\n};\n\nexport const fillSpineAndResource = async (\n    publication: Publication, rootfile: Rootfile | undefined, opf: OPF, zip: IZip,\n    addLinkData: FuncType) => {\n\n    if (!opf.ZipPath) {\n        return;\n    }\n\n    if (opf.Spine && opf.Spine.Items && opf.Spine.Items.length) {\n        for (const item of opf.Spine.Items) {\n\n            if (!item.Linear || item.Linear === \"yes\" ||\n                (item.Linear === \"no\" && publication.Metadata?.Rendition?.Layout === LayoutEnum.Fixed) // stupid evil thing ... but unfortunately some \"commercial-grade\" FXL publications have linear=no on first spine item / cover document (image), which displays normally in iBooks / Apple Books.app because of their implementation choice (which sets an unfortunate precedent ... mind you, the EPUB specification is quite loose about processing / rendering requirements for linear=no, so we can't just blame reading system implementors and/or content authors!)\n            ) {\n\n                let linkItem: Link;\n                try {\n                    linkItem = await findInManifestByID(publication, rootfile, opf, item.IDref, zip, addLinkData);\n                } catch (err) {\n                    debug(err);\n                    continue;\n                }\n\n                if (linkItem && linkItem.Href) {\n                    if (!publication.Spine) {\n                        publication.Spine = [];\n                    }\n                    publication.Spine.push(linkItem);\n                }\n            }\n        }\n    }\n\n    if (opf.Manifest && opf.Manifest.length) {\n\n        for (const item of opf.Manifest) {\n\n            const itemHrefDecoded = item.HrefDecoded;\n            if (!itemHrefDecoded) {\n                debug(\"!? item.Href\", JSON.stringify(item, null, 4));\n                continue;\n            }\n            const zipPath = path.join(path.dirname(opf.ZipPath), itemHrefDecoded)\n                .replace(/\\\\/g, \"/\");\n            const linkSpine = findInSpineByHref(publication, zipPath);\n            if (!linkSpine || !linkSpine.Href) {\n\n                const linkItem = new Link();\n                linkItem.TypeLink = item.MediaType;\n\n                linkItem.setHrefDecoded(zipPath);\n\n                if (!publication.Resources) {\n                    publication.Resources = [];\n                }\n                publication.Resources.push(linkItem);\n\n                await addLinkData(publication, rootfile, opf, zip, linkItem, item);\n            }\n        }\n    }\n};\n\nexport const addLanguage = (publication: Publication, opf: OPF) => {\n\n    const opfMetadataLanguage =\n        opf.Metadata?.DCMetadata?.Language?.length ?\n            opf.Metadata.DCMetadata.Language :\n            (opf.Metadata?.Language?.length ?\n                opf.Metadata.Language :\n                undefined);\n\n    if (opfMetadataLanguage) {\n        publication.Metadata.Language = opfMetadataLanguage;\n    }\n};\n\nexport const addIdentifier = (publication: Publication, opf: OPF) => {\n\n    const opfMetadataIdentifier =\n        opf.Metadata?.DCMetadata?.Identifier?.length ?\n            opf.Metadata.DCMetadata.Identifier :\n            (opf.Metadata?.Identifier?.length ?\n                opf.Metadata.Identifier :\n                undefined);\n\n    if (opfMetadataIdentifier) {\n        if (opf.UniqueIdentifier && opfMetadataIdentifier.length > 1) {\n            opfMetadataIdentifier.forEach((iden) => {\n                if (iden.ID === opf.UniqueIdentifier) {\n                    publication.Metadata.Identifier = iden.Data;\n                }\n            });\n        } else if (opfMetadataIdentifier.length > 0) {\n            publication.Metadata.Identifier = opfMetadataIdentifier[0].Data;\n        }\n    }\n};\n\nexport const addTitle = (publication: Publication, rootfile: Rootfile | undefined, opf: OPF) => {\n\n    const opfMetadataTitle =\n        opf.Metadata?.DCMetadata?.Title?.length ?\n            opf.Metadata.DCMetadata.Title :\n            (opf.Metadata?.Title?.length ?\n                opf.Metadata.Title :\n                undefined);\n\n    if (rootfile && isEpub3OrMore(rootfile, opf)) {\n        let mainTitle: Title | undefined;\n        let subTitle: Title | undefined;\n        let subTitleDisplaySeq = 0;\n\n        if (opfMetadataTitle) {\n\n            if (opf.Metadata?.Meta || opf.Metadata?.XMetadata?.Meta) {\n                const tt = opfMetadataTitle.find((title) => {\n                    const refineID = \"#\" + title.ID;\n\n                    const func0 = (meta: Metafield) => {\n                        // meta.Property === \"title-type\"\n                        if (meta.Data === \"main\" && meta.Refine === refineID) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    let m = opf.Metadata?.Meta ? opf.Metadata.Meta.find(func0) : undefined;\n                    if (!m && opf.Metadata?.XMetadata?.Meta) {\n                        m = opf.Metadata.XMetadata.Meta.find(func0);\n                    }\n                    if (m) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (tt) {\n                    mainTitle = tt;\n                }\n\n                opfMetadataTitle.forEach((title) => {\n                    const refineID = \"#\" + title.ID;\n\n                    const func1 = (meta: Metafield) => {\n                        // meta.Property === \"title-type\"\n                        if (meta.Data === \"subtitle\" && meta.Refine === refineID) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    let m = opf.Metadata?.Meta ? opf.Metadata.Meta.find(func1) : undefined;\n                    if (!m && opf.Metadata?.XMetadata?.Meta) {\n                        m = opf.Metadata.XMetadata.Meta.find(func1);\n                    }\n                    if (m) {\n                        let titleDisplaySeq = 0;\n                        const func2 = (meta: Metafield) => {\n                            if (meta.Property === \"display-seq\" && meta.Refine === refineID) {\n                                return true;\n                            }\n                            return false;\n                        };\n                        let mds = opf.Metadata?.Meta ? opf.Metadata.Meta.find(func2) : undefined;\n                        if (!mds && opf.Metadata?.XMetadata?.Meta) {\n                            mds = opf.Metadata.XMetadata.Meta.find(func2);\n                        }\n                        if (mds) {\n                            try {\n                                titleDisplaySeq = parseInt(mds.Data, 10);\n                            } catch (err) {\n                                debug(err);\n                                debug(mds.Data);\n                                titleDisplaySeq = 0;\n                            }\n                            if (isNaN(titleDisplaySeq)) {\n                                debug(\"NaN\");\n                                debug(mds.Data);\n                                titleDisplaySeq = 0;\n                            }\n                        } else {\n                            titleDisplaySeq = 0;\n                        }\n                        if (!subTitle || titleDisplaySeq < subTitleDisplaySeq) {\n                            subTitle = title;\n                            subTitleDisplaySeq = titleDisplaySeq;\n                        }\n                    }\n                });\n            }\n\n            if (!mainTitle) {\n                mainTitle = opfMetadataTitle[0];\n            }\n        }\n\n        if (mainTitle) {\n            const metaAlt = findAllMetaByRefineAndProperty(opf, mainTitle.ID, \"alternate-script\");\n            if (metaAlt && metaAlt.length) {\n                publication.Metadata.Title = {} as IStringMap;\n\n                metaAlt.forEach((m) => {\n                    if (m.Lang) {\n                        (publication.Metadata.Title as IStringMap)[m.Lang.toLowerCase()] = m.Data;\n                    }\n                });\n\n                // https://github.com/readium/architecture/blob/master/streamer/parser/metadata.md#title\n                const xmlLang: string = mainTitle.Lang || opf.Lang;\n                if (xmlLang) {\n                    publication.Metadata.Title[xmlLang.toLowerCase()] = mainTitle.Data;\n                } else if (publication.Metadata.Language &&\n                    publication.Metadata.Language.length &&\n                    !publication.Metadata.Title[publication.Metadata.Language[0].toLowerCase()]) {\n                    publication.Metadata.Title[publication.Metadata.Language[0].toLowerCase()] = mainTitle.Data;\n                } else {\n                    // tslint:disable-next-line: no-string-literal\n                    publication.Metadata.Title[BCP47_UNKNOWN_LANG] = mainTitle.Data;\n                }\n\n            } else {\n                const xmlLang: string = mainTitle.Lang || opf.Lang;\n                const isLangOverride = mainTitle.Lang && opf.Lang && mainTitle.Lang !== opf.Lang;\n                if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n                    publication.Metadata.Title = {} as IStringMap;\n                    publication.Metadata.Title[xmlLang.toLowerCase()] = mainTitle.Data;\n                } else {\n                    publication.Metadata.Title = mainTitle.Data;\n                }\n            }\n        }\n\n        if (subTitle) {\n            const metaAlt = findAllMetaByRefineAndProperty(opf, subTitle.ID, \"alternate-script\");\n            if (metaAlt && metaAlt.length) {\n                publication.Metadata.SubTitle = {} as IStringMap;\n\n                metaAlt.forEach((m) => {\n                    if (m.Lang) {\n                        (publication.Metadata.SubTitle as IStringMap)[m.Lang.toLowerCase()] = m.Data;\n                    }\n                });\n\n                // https://github.com/readium/architecture/blob/master/streamer/parser/metadata.md#title\n                const xmlLang: string = subTitle.Lang || opf.Lang;\n                if (xmlLang) {\n                    publication.Metadata.SubTitle[xmlLang.toLowerCase()] = subTitle.Data;\n                } else if (publication.Metadata.Language &&\n                    publication.Metadata.Language.length &&\n                    !publication.Metadata.SubTitle[publication.Metadata.Language[0].toLowerCase()]) {\n                    publication.Metadata.SubTitle[publication.Metadata.Language[0].toLowerCase()] = subTitle.Data;\n                } else {\n                    // tslint:disable-next-line: no-string-literal\n                    publication.Metadata.SubTitle[BCP47_UNKNOWN_LANG] = subTitle.Data;\n                }\n\n            } else {\n                const xmlLang: string = subTitle.Lang || opf.Lang;\n                const isLangOverride = subTitle.Lang && opf.Lang && subTitle.Lang !== opf.Lang;\n                if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n                    publication.Metadata.SubTitle = {} as IStringMap;\n                    publication.Metadata.SubTitle[xmlLang.toLowerCase()] = subTitle.Data;\n                } else {\n                    publication.Metadata.SubTitle = subTitle.Data;\n                }\n            }\n        }\n\n    } else {\n        if (opfMetadataTitle) {\n            const xmlLang: string = opfMetadataTitle[0].Lang || opf.Lang;\n            const isLangOverride = opfMetadataTitle[0].Lang && opf.Lang && opfMetadataTitle[0].Lang !== opf.Lang;\n            if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n                publication.Metadata.Title = {} as IStringMap;\n                publication.Metadata.Title[xmlLang.toLowerCase()] = opfMetadataTitle[0].Data;\n            } else {\n                publication.Metadata.Title = opfMetadataTitle[0].Data;\n            }\n        }\n    }\n};\n\nexport const setPublicationDirection = (publication: Publication, opf: OPF) => {\n\n    if (opf.Spine && opf.Spine.PageProgression) {\n        switch (opf.Spine.PageProgression) {\n            case \"auto\": {\n                publication.Metadata.Direction = DirectionEnum.Auto;\n                break;\n            }\n            case \"ltr\": {\n                publication.Metadata.Direction = DirectionEnum.LTR;\n                break;\n            }\n            case \"rtl\": {\n                publication.Metadata.Direction = DirectionEnum.RTL;\n                break;\n            }\n        }\n    }\n\n    if (publication.Metadata.Language && publication.Metadata.Language.length &&\n        (!publication.Metadata.Direction || publication.Metadata.Direction === DirectionEnum.Auto)) {\n\n        const lang = publication.Metadata.Language[0].toLowerCase();\n        if (langStringIsRTL(lang)) {\n            publication.Metadata.Direction = DirectionEnum.RTL;\n        }\n    }\n};\n\nexport const langStringIsRTL = (lang: string): boolean => {\n    return lang === \"ar\" || lang.startsWith(\"ar-\") ||\n        lang === \"he\" || lang.startsWith(\"he-\") ||\n        lang === \"fa\" || lang.startsWith(\"fa-\");\n\n        // https://github.com/edrlab/thorium-reader/pull/3027\n        // lang === \"zh-Hant\" || lang === \"zh-TW\"\n};\n\nexport const getNcx = async (ncxManItem: Manifest, opf: OPF, zip: IZip): Promise<NCX> => {\n\n    if (!opf.ZipPath) {\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(\"?!!opf.ZipPath\");\n    }\n\n    const dname = path.dirname(opf.ZipPath);\n    const ncxManItemHrefDecoded = ncxManItem.HrefDecoded;\n    if (!ncxManItemHrefDecoded) {\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(\"?!ncxManItem.Href\");\n    }\n    const ncxFilePath = path.join(dname, ncxManItemHrefDecoded).replace(/\\\\/g, \"/\");\n\n    const has = await zipHasEntry(zip, ncxFilePath, undefined);\n    if (!has) {\n        const err = `NOT IN ZIP (NCX): ${ncxManItem.Href} --- ${ncxFilePath}`;\n        debug(err);\n        const zipEntries = await zip.getEntries();\n        for (const zipEntry of zipEntries) {\n            if (zipEntry.startsWith(\"__MACOSX/\")) {\n                continue;\n            }\n            debug(zipEntry);\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    let ncxZipStream_: IStreamAndLength;\n    try {\n        ncxZipStream_ = await zip.entryStreamPromise(ncxFilePath);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n    const ncxZipStream = ncxZipStream_.stream;\n\n    let ncxZipData: Buffer;\n    try {\n        ncxZipData = await streamToBufferPromise(ncxZipStream);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    const ncxStr = removeUTF8BOM(ncxZipData.toString(\"utf8\"));\n    return getNcx_(ncxStr, ncxFilePath);\n};\n\nexport const getNcx_ = (ncxStr: string, ncxFilePath: string): NCX => {\n    const iStart = ncxStr.indexOf(\"<ncx\");\n    if (iStart >= 0) {\n        const iEnd = ncxStr.indexOf(\">\", iStart);\n        if (iEnd > iStart) {\n            const clip = ncxStr.substr(iStart, iEnd - iStart);\n            if (clip.indexOf(\"xmlns\") < 0) {\n                ncxStr = ncxStr.replace(/<ncx/, \"<ncx xmlns=\\\"http://www.daisy.org/z3986/2005/ncx/\\\" \");\n            }\n        }\n    }\n\n    const ncxDoc = new xmldom.DOMParser().parseFromString(ncxStr, \"application/xml\") as unknown as Document;\n    const ncx = XML.deserialize<NCX>(ncxDoc, NCX);\n    ncx.ZipPath = ncxFilePath;\n\n    // breakLength: 100  maxArrayLength: undefined\n    // debug(util.inspect(ncx,\n    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    return ncx;\n};\n\nexport const getOpf = async (zip: IZip, rootfilePathDecoded: string, rootfilePath: string): Promise<OPF> => {\n\n    // let timeBegin = process.hrtime();\n    const has = await zipHasEntry(zip, rootfilePathDecoded, rootfilePath);\n    if (!has) {\n        const err = `NOT IN ZIP (container OPF rootfile): ${rootfilePath} --- ${rootfilePathDecoded}`;\n        debug(err);\n        const zipEntries = await zip.getEntries();\n        for (const zipEntry of zipEntries) {\n            if (zipEntry.startsWith(\"__MACOSX/\")) {\n                continue;\n            }\n            debug(zipEntry);\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    let opfZipStream_: IStreamAndLength;\n    try {\n        opfZipStream_ = await zip.entryStreamPromise(rootfilePathDecoded);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n    const opfZipStream = opfZipStream_.stream;\n\n    // const timeElapsed1 = process.hrtime(timeBegin);\n    // debug(`1) ${timeElapsed1[0]} seconds + ${timeElapsed1[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    let opfZipData: Buffer;\n    try {\n        opfZipData = await streamToBufferPromise(opfZipStream);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    // debug(`${opfZipData.length} bytes`);\n\n    // const timeElapsed2 = process.hrtime(timeBegin);\n    // debug(`2) ${timeElapsed2[0]} seconds + ${timeElapsed2[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    const opfStr = removeUTF8BOM(opfZipData.toString(\"utf8\"));\n    return getOpf_(opfStr, rootfilePathDecoded);\n};\n\nexport const getOpf_ = (opfStr: string, rootfilePathDecoded: string): OPF => {\n\n    const iStart = opfStr.indexOf(\"<package\");\n    if (iStart >= 0) {\n        const iEnd = opfStr.indexOf(\">\", iStart);\n        if (iEnd > iStart) {\n            const clip = opfStr.substr(iStart, iEnd - iStart);\n            if (clip.indexOf(\"xmlns\") < 0) {\n                opfStr = opfStr.replace(/<package/, \"<package xmlns=\\\"http://openebook.org/namespaces/oeb-package/1.0/\\\" \");\n            }\n        }\n    }\n\n    // const timeElapsed3 = process.hrtime(timeBegin);\n    // debug(`3) ${timeElapsed3[0]} seconds + ${timeElapsed3[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    // TODO: this takes some time with large OPF XML data\n    // (typically: many manifest items),\n    // but it remains acceptable.\n    // e.g. BasicTechnicalMathWithCalculus.epub with 2.5MB OPF!\n    const opfDoc = new xmldom.DOMParser().parseFromString(opfStr, \"application/xml\") as unknown as Document;\n\n    // const timeElapsed4 = process.hrtime(timeBegin);\n    // debug(`4) ${timeElapsed4[0]} seconds + ${timeElapsed4[1]} nanoseconds`);\n    // const timeBegin = process.hrtime();\n\n    // tslint:disable-next-line:no-string-literal\n    // process.env[\"OPF_PARSE\"] = \"true\";\n    // TODO: this takes a MASSIVE amount of time with large OPF XML data\n    // (typically: many manifest items)\n    // e.g. BasicTechnicalMathWithCalculus.epub with 2.5MB OPF!\n    // culprit: XPath lib ... so we use our own mini XPath parser/matcher\n    // (=> performance gain in orders of magnitude!)\n    const opf = XML.deserialize<OPF>(opfDoc, OPF);\n    // tslint:disable-next-line:no-string-literal\n    // process.env[\"OPF_PARSE\"] = \"false\";\n\n    // const timeElapsed5 = process.hrtime(timeBegin);\n    // debug(`5) ${timeElapsed5[0]} seconds + ${timeElapsed5[1]} nanoseconds`);\n\n    opf.ZipPath = rootfilePathDecoded;\n\n    // breakLength: 100  maxArrayLength: undefined\n    // debug(util.inspect(opf,\n    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    return opf;\n};\n\nexport const addOtherMetadata = (publication: Publication, rootfile: Rootfile | undefined, opf: OPF) => {\n\n    if (!opf.Metadata) {\n        return;\n    }\n\n    const opfMetadataRights =\n        opf.Metadata?.DCMetadata?.Rights?.length ?\n            opf.Metadata.DCMetadata.Rights :\n            (opf.Metadata?.Rights?.length ?\n                opf.Metadata.Rights :\n                undefined);\n    if (opfMetadataRights) {\n        publication.Metadata.Rights = opfMetadataRights.join(\" \");\n    }\n\n    const opfMetadataDescription =\n        opf.Metadata?.DCMetadata?.Description?.length ?\n            opf.Metadata.DCMetadata.Description :\n            (opf.Metadata?.Description?.length ?\n                opf.Metadata.Description :\n                undefined);\n    if (opfMetadataDescription) {\n        publication.Metadata.Description = opfMetadataDescription[0];\n    }\n\n    const opfMetadataPublisher =\n        opf.Metadata?.DCMetadata?.Publisher?.length ?\n            opf.Metadata.DCMetadata.Publisher :\n            (opf.Metadata?.Publisher?.length ?\n                opf.Metadata.Publisher :\n                undefined);\n    if (opfMetadataPublisher) {\n        publication.Metadata.Publisher = [];\n\n        opfMetadataPublisher.forEach((pub) => {\n            const contrib = new Contributor();\n            contrib.Name = pub;\n            publication.Metadata.Publisher.push(contrib);\n        });\n    }\n\n    const opfMetadataSource =\n        opf.Metadata?.DCMetadata?.Source?.length ?\n            opf.Metadata.DCMetadata.Source :\n            (opf.Metadata?.Source?.length ?\n                opf.Metadata.Source :\n                undefined);\n    if (opfMetadataSource) {\n        publication.Metadata.Source = opfMetadataSource[0];\n    }\n\n    const opfMetadataContributor =\n        opf.Metadata?.DCMetadata?.Contributor?.length ?\n            opf.Metadata.DCMetadata.Contributor :\n            (opf.Metadata?.Contributor?.length ?\n                opf.Metadata.Contributor :\n                undefined);\n    if (opfMetadataContributor) {\n        opfMetadataContributor.forEach((cont) => {\n            addContributor(publication, rootfile, opf, cont, undefined);\n        });\n    }\n\n    const opfMetadataCreator =\n        opf.Metadata?.DCMetadata?.Creator?.length ?\n            opf.Metadata.DCMetadata.Creator :\n            (opf.Metadata?.Creator?.length ?\n                opf.Metadata.Creator :\n                undefined);\n    if (opfMetadataCreator) {\n        opfMetadataCreator.forEach((cont) => {\n            addContributor(publication, rootfile, opf, cont, \"aut\");\n        });\n    }\n\n    if (opf.Metadata?.Link) {\n        opf.Metadata.Link.forEach((metaLink) => {\n            if (metaLink.Property === \"a11y:certifierCredential\" ||\n                metaLink.Rel === \"a11y:certifierCredential\") {\n                let val = metaLink.Href;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.CertifierCredential) {\n                    publication.Metadata.CertifierCredential = [];\n                }\n                publication.Metadata.CertifierCredential.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Certification) {\n                    publication.Metadata.Accessibility.Certification = {} as AccessibilityCertification;\n                }\n                if (!publication.Metadata.Accessibility.Certification.Credential) {\n                    publication.Metadata.Accessibility.Certification.Credential = [];\n                }\n                publication.Metadata.Accessibility.Certification.Credential.push(val);\n            } else if (metaLink.Property === \"a11y:certifierReport\" ||\n                metaLink.Rel === \"a11y:certifierReport\") {\n                let val = metaLink.Href;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.CertifierReport) {\n                    publication.Metadata.CertifierReport = [];\n                }\n                publication.Metadata.CertifierReport.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Certification) {\n                    publication.Metadata.Accessibility.Certification = {} as AccessibilityCertification;\n                }\n                if (!publication.Metadata.Accessibility.Certification.Report) {\n                    publication.Metadata.Accessibility.Certification.Report = [];\n                }\n                publication.Metadata.Accessibility.Certification.Report.push(val);\n            } else if (metaLink.Property === \"dcterms:conformsTo\" ||\n                metaLink.Rel === \"dcterms:conformsTo\") {\n                let val = metaLink.Href;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.ConformsTo) {\n                    publication.Metadata.ConformsTo = [];\n                }\n                publication.Metadata.ConformsTo.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.ConformsTo) {\n                    publication.Metadata.Accessibility.ConformsTo = [];\n                }\n                publication.Metadata.Accessibility.ConformsTo.push(val);\n            }\n        });\n    }\n\n    if (opf.Metadata.Meta || opf.Metadata.XMetadata?.Meta) {\n\n        interface IMetaTagValue {\n            metaTag: Metafield;\n            val: string;\n        }\n        const AccessibilitySummarys: IMetaTagValue[] = [];\n\n        const metaFunc = (metaTag: Metafield) => {\n            if (metaTag.Name === \"schema:accessMode\" ||\n                metaTag.Property === \"schema:accessMode\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.AccessMode) {\n                    publication.Metadata.AccessMode = [];\n                }\n                publication.Metadata.AccessMode.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.AccessMode) {\n                    publication.Metadata.Accessibility.AccessMode = [];\n                }\n                publication.Metadata.Accessibility.AccessMode.push(val);\n            } else if (metaTag.Name === \"schema:accessibilityFeature\" ||\n                metaTag.Property === \"schema:accessibilityFeature\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.AccessibilityFeature) {\n                    publication.Metadata.AccessibilityFeature = [];\n                }\n                publication.Metadata.AccessibilityFeature.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Feature) {\n                    publication.Metadata.Accessibility.Feature = [];\n                }\n                publication.Metadata.Accessibility.Feature.push(val);\n            } else if (metaTag.Name === \"schema:accessibilityHazard\" ||\n                metaTag.Property === \"schema:accessibilityHazard\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.AccessibilityHazard) {\n                    publication.Metadata.AccessibilityHazard = [];\n                }\n                publication.Metadata.AccessibilityHazard.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Hazard) {\n                    publication.Metadata.Accessibility.Hazard = [];\n                }\n                publication.Metadata.Accessibility.Hazard.push(val);\n            } else if (metaTag.Name === \"schema:accessibilitySummary\" ||\n                metaTag.Property === \"schema:accessibilitySummary\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n                AccessibilitySummarys.push({\n                    metaTag,\n                    val,\n                });\n            } else if (metaTag.Name === \"schema:accessModeSufficient\" ||\n                metaTag.Property === \"schema:accessModeSufficient\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                const del = DelinearizeAccessModeSufficient(val);\n\n                // legacy\n                if (!publication.Metadata.AccessModeSufficient) {\n                    publication.Metadata.AccessModeSufficient = [];\n                }\n                publication.Metadata.AccessModeSufficient.push(del);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.AccessModeSufficient) {\n                    publication.Metadata.Accessibility.AccessModeSufficient = [];\n                }\n                publication.Metadata.Accessibility.AccessModeSufficient.push(del);\n            } else if (metaTag.Name === \"schema:accessibilityAPI\" ||\n                metaTag.Property === \"schema:accessibilityAPI\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.AccessibilityAPI) {\n                    publication.Metadata.AccessibilityAPI = [];\n                }\n                publication.Metadata.AccessibilityAPI.push(val);\n                // modern\n                // if (!publication.Metadata.Accessibility) {\n                //     publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                // }\n                // if (!publication.Metadata.Accessibility.API) {\n                //     publication.Metadata.Accessibility.API = [];\n                // }\n                // publication.Metadata.Accessibility.API.push(val);\n            } else if (metaTag.Name === \"schema:accessibilityControl\" ||\n                metaTag.Property === \"schema:accessibilityControl\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.AccessibilityControl) {\n                    publication.Metadata.AccessibilityControl = [];\n                }\n                publication.Metadata.AccessibilityControl.push(val);\n                // modern\n                // if (!publication.Metadata.Accessibility) {\n                //     publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                // }\n                // if (!publication.Metadata.Accessibility.Control) {\n                //     publication.Metadata.Accessibility.Control = [];\n                // }\n                // publication.Metadata.Accessibility.Control.push(val);\n            } else if (metaTag.Name === \"a11y:certifiedBy\" ||\n                metaTag.Property === \"a11y:certifiedBy\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.CertifiedBy) {\n                    publication.Metadata.CertifiedBy = [];\n                }\n                publication.Metadata.CertifiedBy.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Certification) {\n                    publication.Metadata.Accessibility.Certification = {} as AccessibilityCertification;\n                }\n                if (!publication.Metadata.Accessibility.Certification.CertifiedBy) {\n                    publication.Metadata.Accessibility.Certification.CertifiedBy = [];\n                }\n                publication.Metadata.Accessibility.Certification.CertifiedBy.push(val);\n            } else if (metaTag.Name === \"a11y:certifierCredential\" || // may be link in EPUB3\n                metaTag.Property === \"a11y:certifierCredential\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.CertifierCredential) {\n                    publication.Metadata.CertifierCredential = [];\n                }\n                publication.Metadata.CertifierCredential.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.Certification) {\n                    publication.Metadata.Accessibility.Certification = {} as AccessibilityCertification;\n                }\n                if (!publication.Metadata.Accessibility.Certification.Credential) {\n                    publication.Metadata.Accessibility.Certification.Credential = [];\n                }\n                publication.Metadata.Accessibility.Certification.Credential.push(val);\n            } else if (metaTag.Name === \"dcterms:conformsTo\" || // may be link in EPUB3\n                metaTag.Property === \"dcterms:conformsTo\") {\n                let val = metaTag.Property ? metaTag.Data : metaTag.Content;\n                if (!val) {\n                    return; // continue\n                }\n                val = val.trim();\n                if (!val) {\n                    return; // continue\n                }\n\n                // legacy\n                if (!publication.Metadata.ConformsTo) {\n                    publication.Metadata.ConformsTo = [];\n                }\n                publication.Metadata.ConformsTo.push(val);\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                if (!publication.Metadata.Accessibility.ConformsTo) {\n                    publication.Metadata.Accessibility.ConformsTo = [];\n                }\n                publication.Metadata.Accessibility.ConformsTo.push(val);\n            }\n        };\n\n        if (opf.Metadata.Meta) {\n            opf.Metadata.Meta.forEach(metaFunc);\n        }\n        if (opf.Metadata.XMetadata?.Meta) {\n            opf.Metadata.XMetadata.Meta.forEach(metaFunc);\n        }\n\n        if (AccessibilitySummarys.length === 1) {\n            const tuple = AccessibilitySummarys[0];\n\n            // a11y:summary parsing => xml:lang ignored (unless RTL)\n            // https://github.com/w3c/publ-a11y/issues/94\n            // https://github.com/w3c/epub-specs/pull/2401#issuecomment-121326068\n            // https://www.w3.org/TR/epub-a11y-tech-11/#meta-005\n            // https://github.com/readium/architecture/blob/master/streamer/parser/a11y-metadata-parsing.md#accessibilitysummary\n            const xmlLang: string = tuple.metaTag.Lang || opf.Lang;\n            const isLangOverride = tuple.metaTag.Lang && opf.Lang && tuple.metaTag.Lang !== opf.Lang;\n            if (xmlLang && (isLangOverride || langStringIsRTL(xmlLang.toLowerCase()))) {\n\n                // legacy\n                publication.Metadata.AccessibilitySummary = {} as IStringMap;\n                // tslint:disable-next-line: max-line-length\n                (publication.Metadata.AccessibilitySummary as IStringMap)[xmlLang.toLowerCase()] = tuple.val;\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                publication.Metadata.Accessibility.Summary = {} as IStringMap;\n                (publication.Metadata.Accessibility.Summary as IStringMap)[xmlLang.toLowerCase()] = tuple.val;\n            } else {\n                // legacy\n                publication.Metadata.AccessibilitySummary = tuple.val;\n                // modern\n                if (!publication.Metadata.Accessibility) {\n                    publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n                }\n                publication.Metadata.Accessibility.Summary = tuple.val;\n            }\n        } else if (AccessibilitySummarys.length) {\n            // legacy\n            publication.Metadata.AccessibilitySummary = {} as IStringMap;\n            AccessibilitySummarys.forEach((tuple) => {\n                // https://github.com/readium/architecture/blob/master/streamer/parser/metadata.md#title\n                const xmlLang: string = tuple.metaTag.Lang || opf.Lang;\n                if (xmlLang) {\n                    // tslint:disable-next-line: max-line-length\n                    (publication.Metadata.AccessibilitySummary as IStringMap)[xmlLang.toLowerCase()] = tuple.val;\n                } else if (publication.Metadata.Language &&\n                    publication.Metadata.Language.length &&\n                    // tslint:disable-next-line: max-line-length\n                    !(publication.Metadata.AccessibilitySummary as IStringMap)[publication.Metadata.Language[0].toLowerCase()]) {\n                    // tslint:disable-next-line: max-line-length\n                    (publication.Metadata.AccessibilitySummary as IStringMap)[publication.Metadata.Language[0].toLowerCase()] = tuple.val;\n                } else {\n                    // tslint:disable-next-line: no-string-literal, max-line-length\n                    (publication.Metadata.AccessibilitySummary as IStringMap)[BCP47_UNKNOWN_LANG] = tuple.val;\n                }\n            });\n            // modern\n            if (!publication.Metadata.Accessibility) {\n                publication.Metadata.Accessibility = {} as AccessibilityMetadata;\n            }\n            publication.Metadata.Accessibility.Summary = {} as IStringMap;\n            AccessibilitySummarys.forEach((tuple) => {\n                // https://github.com/readium/architecture/blob/master/streamer/parser/metadata.md#title\n                const xmlLang: string = tuple.metaTag.Lang || opf.Lang;\n                if (xmlLang) {\n                    // tslint:disable-next-line: max-line-length\n                    (publication.Metadata.Accessibility.Summary as IStringMap)[xmlLang.toLowerCase()] = tuple.val;\n                } else if (publication.Metadata.Language &&\n                    publication.Metadata.Language.length &&\n                    // tslint:disable-next-line: max-line-length\n                    !(publication.Metadata.Accessibility.Summary as IStringMap)[publication.Metadata.Language[0].toLowerCase()]) {\n                    // tslint:disable-next-line: max-line-length\n                    (publication.Metadata.Accessibility.Summary as IStringMap)[publication.Metadata.Language[0].toLowerCase()] = tuple.val;\n                } else {\n                    // tslint:disable-next-line: no-string-literal, max-line-length\n                    (publication.Metadata.Accessibility.Summary as IStringMap)[BCP47_UNKNOWN_LANG] = tuple.val;\n                }\n            });\n\n        }\n\n        const metasDuration: Metafield[] = [];\n        const metasNarrator: Metafield[] = [];\n        const metasActiveClass: Metafield[] = [];\n        const metasPlaybackActiveClass: Metafield[] = [];\n\n        const mFunc = (metaTag: Metafield) => {\n\n            if (metaTag.Name === \"dtb:totalTime\") {\n                metasDuration.push(metaTag);\n            } else if (metaTag.Property === \"media:duration\" && !metaTag.Refine) {\n                metasDuration.push(metaTag);\n            } else if (metaTag.Property === \"media:narrator\") {\n                metasNarrator.push(metaTag);\n            } else if (metaTag.Property === \"media:active-class\") {\n                metasActiveClass.push(metaTag);\n            } else if (metaTag.Property === \"media:playback-active-class\") {\n                metasPlaybackActiveClass.push(metaTag);\n            } else {\n                // fallback, see MetadataSupportedKeys in metadata.ts\n                const key = metaTag.Name ? metaTag.Name : metaTag.Property;\n                if (key && !metaTag.Refine && !MetadataSupportedKeys.includes(key)) {\n\n                    if (!publication.Metadata.AdditionalJSON) {\n                        publication.Metadata.AdditionalJSON = {};\n                    }\n                    if (metaTag.Name && metaTag.Content) {\n                        publication.Metadata.AdditionalJSON[metaTag.Name] = metaTag.Content;\n                    } else if (metaTag.Property && metaTag.Data) {\n                        publication.Metadata.AdditionalJSON[metaTag.Property] = metaTag.Data;\n                    }\n                }\n            }\n        };\n        if (opf.Metadata.Meta) {\n            opf.Metadata.Meta.forEach(mFunc);\n        }\n        if (opf.Metadata.XMetadata?.Meta) {\n            opf.Metadata.XMetadata.Meta.forEach(mFunc);\n        }\n\n        if (metasDuration.length) {\n            const dur = timeStrToSeconds(metasDuration[0].Property ? metasDuration[0].Data : metasDuration[0].Content);\n            if (dur !== 0) { // parsing failure?\n                publication.Metadata.Duration = dur;\n            }\n        }\n\n        if (metasNarrator.length) {\n            if (!publication.Metadata.Narrator) {\n                publication.Metadata.Narrator = [];\n            }\n            metasNarrator.forEach((metaNarrator) => {\n                const cont = new Contributor();\n                cont.Name = metaNarrator.Data;\n                publication.Metadata.Narrator.push(cont);\n            });\n        }\n        if (metasActiveClass.length) {\n            if (!publication.Metadata.MediaOverlay) {\n                publication.Metadata.MediaOverlay = new MediaOverlay();\n            }\n            publication.Metadata.MediaOverlay.ActiveClass = metasActiveClass[0].Data;\n        }\n        if (metasPlaybackActiveClass.length) {\n            if (!publication.Metadata.MediaOverlay) {\n                publication.Metadata.MediaOverlay = new MediaOverlay();\n            }\n            publication.Metadata.MediaOverlay.PlaybackActiveClass = metasPlaybackActiveClass[0].Data;\n        }\n    }\n};\n\nexport const loadFileStrFromZipPath = async (\n    linkHref: string, linkHrefDecoded: string, zip: IZip): Promise<string | undefined> => {\n\n    let zipData: Buffer | undefined;\n    try {\n        zipData = await loadFileBufferFromZipPath(linkHref, linkHrefDecoded, zip);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n    if (zipData) {\n        return zipData.toString(\"utf8\");\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n    return Promise.reject(\"?!zipData loadFileStrFromZipPath()\");\n};\n\nexport const loadFileBufferFromZipPath = async (\n    linkHref: string, linkHrefDecoded: string, zip: IZip): Promise<Buffer | undefined> => {\n\n    if (!linkHrefDecoded) {\n        debug(\"!?link.HrefDecoded\");\n        return undefined;\n    }\n    const has = await zipHasEntry(zip, linkHrefDecoded, linkHref);\n    if (!has) {\n        debug(`NOT IN ZIP (loadFileBufferFromZipPath): ${linkHref} --- ${linkHrefDecoded}`);\n        const zipEntries = await zip.getEntries();\n        for (const zipEntry of zipEntries) {\n            if (zipEntry.startsWith(\"__MACOSX/\")) {\n                continue;\n            }\n            debug(zipEntry);\n        }\n        return undefined;\n    }\n\n    let zipStream_: IStreamAndLength;\n    try {\n        zipStream_ = await zip.entryStreamPromise(linkHrefDecoded);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n    const zipStream = zipStream_.stream;\n\n    let zipData: Buffer;\n    try {\n        zipData = await streamToBufferPromise(zipStream);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    return zipData;\n};\n\nconst fillLandmarksFromGuide = (publication: Publication, opf: OPF) => {\n    if (opf.Guide && opf.Guide.length) {\n        opf.Guide.forEach((ref) => {\n            if (ref.Href && opf.ZipPath) {\n                const refHrefDecoded = ref.HrefDecoded;\n                if (!refHrefDecoded) {\n                    debug(\"ref.Href?!\");\n                    return; // foreach\n                }\n                const link = new Link();\n                const zipPath = path.join(path.dirname(opf.ZipPath), refHrefDecoded)\n                    .replace(/\\\\/g, \"/\");\n\n                link.setHrefDecoded(zipPath);\n\n                link.Title = ref.Title;\n                if (!publication.Landmarks) {\n                    publication.Landmarks = [];\n                }\n                publication.Landmarks.push(link);\n            }\n        });\n    }\n};\n\nconst fillTOCFromNCX = (publication: Publication, ncx: NCX) => {\n    if (ncx.Points && ncx.Points.length) {\n        ncx.Points.forEach((point) => {\n            if (!publication.TOC) {\n                publication.TOC = [];\n            }\n            fillTOCFromNavPoint(publication, ncx, point, publication.TOC);\n        });\n    }\n};\n\nconst addAlternateAudioLinkFromNCX = (ncx: NCX, link: Link, navLabel: NavLabel | undefined) => {\n\n    if (navLabel?.Audio && navLabel.Audio.Src) {\n\n        const audioSrcDcoded = navLabel.Audio.SrcDecoded;\n        if (!audioSrcDcoded) {\n            debug(\"?!audioSrcDcoded\");\n        } else {\n            const zipPath = path.join(path.dirname(ncx.ZipPath), audioSrcDcoded)\n                .replace(/\\\\/g, \"/\");\n            let timeHref = zipPath;\n            timeHref += \"#t=\";\n\n            const begin = navLabel.Audio.ClipBegin ? timeStrToSeconds(navLabel.Audio.ClipBegin) : 0;\n            // altLink.AudioClipBegin = begin;\n            const end = navLabel.Audio.ClipEnd ? timeStrToSeconds(navLabel.Audio.ClipEnd) : 0;\n            // altLink.AudioClipEnd = end;\n\n            timeHref += begin.toString();\n            if (navLabel.Audio.ClipEnd && end) {\n                timeHref += \",\";\n                timeHref += end.toString();\n            }\n\n            if (!link.Alternate) {\n                link.Alternate = [];\n            }\n            const altLink = new Link();\n            altLink.Rel = [\"daisyAudioLabel\"];\n\n            altLink.setHrefDecoded(timeHref);\n\n            const mediaType = mime.lookup(audioSrcDcoded);\n            if (mediaType) {\n                altLink.TypeLink = mediaType;\n            }\n\n            if (navLabel.Audio.ClipEnd && end > begin) {\n                altLink.Duration = end - begin;\n            }\n\n            link.Alternate.push(altLink);\n        }\n    }\n};\n\nconst fillTOCFromNavPoint = (publication: Publication, ncx: NCX, point: NavPoint, node: Link[]) => {\n\n    const srcDecoded = point.Content.SrcDecoded;\n    if (!srcDecoded) {\n        debug(\"?!point.Content.Src\");\n        return;\n    }\n    const link = new Link();\n    const zipPath = path.join(path.dirname(ncx.ZipPath), srcDecoded)\n        .replace(/\\\\/g, \"/\");\n\n    link.setHrefDecoded(zipPath);\n\n    link.Title = point.NavLabel?.Text;\n\n    addAlternateAudioLinkFromNCX(ncx, link, point.NavLabel);\n\n    if (point.Points && point.Points.length) {\n        point.Points.forEach((p) => {\n            if (!link.Children) {\n                link.Children = [];\n            }\n            fillTOCFromNavPoint(publication, ncx, p, link.Children);\n        });\n    }\n\n    node.push(link);\n};\n\nconst fillPageListFromNCX = (publication: Publication, ncx: NCX) => {\n\n    if (ncx.PageList && ncx.PageList.PageTarget && ncx.PageList.PageTarget.length) {\n        ncx.PageList.PageTarget.forEach((pageTarget) => {\n            const link = new Link();\n            const srcDecoded = pageTarget.Content.SrcDecoded;\n            if (!srcDecoded) {\n                debug(\"!?srcDecoded\");\n                return; // foreach\n            }\n            const zipPath = path.join(path.dirname(ncx.ZipPath), srcDecoded)\n                .replace(/\\\\/g, \"/\");\n\n            link.setHrefDecoded(zipPath);\n\n            link.Title = pageTarget.NavLabel?.Text;\n\n            addAlternateAudioLinkFromNCX(ncx, link, pageTarget.NavLabel);\n\n            if (!publication.PageList) {\n                publication.PageList = [];\n            }\n            publication.PageList.push(link);\n        });\n    }\n};\n\nexport const fillTOC = (publication: Publication, opf: OPF, ncx: NCX | undefined) => {\n\n    if (ncx) {\n        fillTOCFromNCX(publication, ncx);\n        if (!publication.PageList) {\n            fillPageListFromNCX(publication, ncx);\n        }\n    }\n    fillLandmarksFromGuide(publication, opf);\n};\n\nexport const addMediaOverlaySMIL = async (link: Link, manItemSmil: Manifest, opf: OPF, zip: IZip) => {\n\n    if (manItemSmil && manItemSmil.MediaType && manItemSmil.MediaType.startsWith(\"application/smil\")) {\n        if (opf.ZipPath) {\n            const manItemSmilHrefDecoded = manItemSmil.HrefDecoded;\n            if (!manItemSmilHrefDecoded) {\n                debug(\"!?manItemSmil.HrefDecoded\");\n                return;\n            }\n            const smilFilePath = path.join(path.dirname(opf.ZipPath), manItemSmilHrefDecoded)\n                .replace(/\\\\/g, \"/\");\n\n            const has = await zipHasEntry(zip, smilFilePath, smilFilePath);\n            if (!has) {\n                debug(`NOT IN ZIP (addMediaOverlay): ${smilFilePath} -- ${opf.ZipPath}`);\n                const zipEntries = await zip.getEntries();\n                for (const zipEntry of zipEntries) {\n                    if (zipEntry.startsWith(\"__MACOSX/\")) {\n                        continue;\n                    }\n                    debug(zipEntry);\n                }\n                return;\n            }\n\n            const mo = new MediaOverlayNode();\n            mo.SmilPathInZip = smilFilePath;\n            mo.initialized = false;\n            link.MediaOverlays = mo;\n\n            const moURL = mediaOverlayURLPath + \"?\" +\n                mediaOverlayURLParam + \"=\" +\n                encodeURIComponent_RFC3986(link.HrefDecoded ? link.HrefDecoded : link.Href);\n\n            // legacy method:\n            if (!link.Properties) {\n                link.Properties = new Properties();\n            }\n            link.Properties.MediaOverlay = moURL;\n\n            // new method:\n            // https://w3c.github.io/sync-media-pub/incorporating-synchronized-narration.html#with-webpub\n            if (!link.Alternate) {\n                link.Alternate = [];\n            }\n            const moLink = new Link();\n            moLink.Href = moURL;\n            moLink.TypeLink = \"application/vnd.syncnarr+json\";\n            moLink.Duration = link.Duration;\n            link.Alternate.push(moLink);\n\n            if (link.Properties && link.Properties.Encrypted) {\n                debug(\"ENCRYPTED SMIL MEDIA OVERLAY: \" + (link.HrefDecoded ? link.HrefDecoded : link.Href));\n            }\n            // LAZY\n            // await lazyLoadMediaOverlays(publication, mo);\n        }\n    }\n};\n\n// export const flattenDaisy2SmilAudioSeq_ = (_smilPathInZip: string, smilXmlDoc: Document) => {\n\n//     // flatten seq inside par\n//     // (naive implementation, assumes contiguity of begin/end clips for same audio file)\n//     const pars = smilXmlDoc.getElementsByTagName(\"par\");\n//     // tslint:disable-next-line: prefer-for-of\n//     for (let i = 0; i < pars.length; i++) {\n//         const par = pars[i];\n//         const seq = par.getElementsByTagName(\"seq\")[0] as Element | undefined; // assumes one only (safe assumption)\n//         if (seq) {\n//             let audioInsidePar;\n//             const audios = seq.getElementsByTagName(\"audio\");\n//             for (let j = 0; j < audios.length; j++) {\n//                 if (j === 0) {\n//                     audioInsidePar = audios[j];\n//                 }\n//                 if (audioInsidePar && j === audios.length - 1) {\n//                     const clipEnd = audios[j].getAttribute(\"clip-end\") || \"\";\n//                     audioInsidePar.setAttribute(\"clip-end\", clipEnd);\n//                 }\n//             }\n//             if (audioInsidePar) {\n//                 seq.removeChild(audioInsidePar);\n//                 par.removeChild(seq);\n//                 par.appendChild(audioInsidePar);\n//             }\n//         }\n//     }\n// };\n\nexport const flattenDaisy2SmilAudioSeq = (_smilPathInZip: string, smilXmlDoc: Document) => {\n\n    // const beforeXML = new xmldom.XMLSerializer().serializeToString(smilXmlDoc.documentElement as unknown as xmldom.Element);\n    // debug(\"beforeXML\", _smilPathInZip, beforeXML);\n\n    // let iClone = 0;\n\n    // factor out seq that's inside par\n    const pars = Array.from(smilXmlDoc.getElementsByTagName(\"par\"));\n    for (const par of pars) {\n        const seq = par.getElementsByTagName(\"seq\")[0] as Element | undefined; // assumes one only (safe assumption)\n        if (!seq) {\n            continue;\n        }\n\n        // const text = par.getElementsByTagName(\"text\")[0] as Element | undefined; // assumes one only (safe assumption)\n\n        let prevAudio: HTMLAudioElement | undefined = undefined;\n        const audios = Array.from(seq.getElementsByTagName(\"audio\"));\n        for (let j = 0; j < audios.length; j++) {\n            const audio = audios[j];\n\n            if (prevAudio === undefined) {\n                seq.removeChild(audio);\n                par.appendChild(audio);\n                prevAudio = audio;\n            } else {\n                const prevSrc = prevAudio.getAttribute(\"src\");\n                const thisSrc = audio.getAttribute(\"src\");\n                if (thisSrc === prevSrc) {\n                    const prevCeAttr = prevAudio.getAttribute(\"clip-end\");\n                    const thisCbAttr = audio.getAttribute(\"clip-begin\");\n                    let contiguous = prevCeAttr && thisCbAttr && prevCeAttr === thisCbAttr;\n                    if (prevCeAttr && thisCbAttr && !contiguous) {\n                        const prevT = timeStrToSeconds(prevCeAttr);\n                        const thisT = timeStrToSeconds(thisCbAttr);\n                        if (prevT === thisT || Math.abs(prevT - thisT) <= 0.5) {\n                            // debug(Math.abs(prevT - thisT));\n                            contiguous = true;\n                        }\n                    }\n                    if (contiguous) {\n                        const thisCeAttr = audio.getAttribute(\"clip-end\");\n                        if (thisCeAttr) {\n                            prevAudio.setAttribute(\"clip-end\", thisCeAttr);\n                        } else if (prevAudio.getAttribute(\"clip-end\")) {\n                            prevAudio.removeAttribute(\"clip-end\");\n                        }\n                    } else {\n                        debug(\"NCC SMIL AUDIO not contiguous!! \", thisSrc, prevCeAttr, thisCbAttr);\n                        // TODO: insert a new PAR that references the same TEXT but with different AUDIO (clip-begin/end) in order to reset the discontiguous sequence ... but that's a VERY! unlikely edge-case so low-priority until there is an actual SMIL structured this way.\n                    }\n                } else {\n                    debug(\"NCC SMIL AUDIO thisSrc !== prevSrc!! \", thisSrc, prevSrc);\n                    // TODO: insert a new PAR that references the same TEXT but with different AUDIO (src) ... but that's a VERY! unlikely edge-case so low-priority until there is an actual SMIL structured this way.\n                    // seq.removeChild(audio);\n                    // par.appendChild(audio);\n                    // prevAudio = audio;\n                }\n            }\n\n            // if (j === 0) {\n            //     if (text) {\n            //         if (text.insertAdjacentElement) {\n            //             text.insertAdjacentHTML(\"afterend\", \"<!-- R2 AUDIO FLAT a -->\");\n            //             text.insertAdjacentElement(\"afterend\", audio);\n            //         } else if (text.parentNode) {\n            //             text.parentNode.insertBefore(smilXmlDoc.createComment(\"R2 AUDIO FLAT b\"), text.nextElementSibling);\n            //             text.parentNode.insertBefore(audio, null); // text.nextElementSibling\n            //         }\n\n            //         // hoist DAISY2 text ID to parent par\n            //         const parId = par.getAttribute(\"id\");\n            //         if (!parId) {\n            //             const txtId = text.getAttribute(\"id\");\n            //             if (txtId) {\n            //                 par.setAttribute(\"id\", txtId);\n            //                 text.removeAttribute(\"id\");\n            //             }\n            //         }\n            //     } else {\n            //         par.appendChild(audio);\n            //     }\n            // }\n            // else {\n            //     const newPar = par.namespaceURI ?\n            //         smilXmlDoc.createElementNS(par.namespaceURI, \"par\") :\n            //         smilXmlDoc.createElement(\"par\");\n            //     iClone++;\n            //     if (text) {\n            //         const cloneText = text.cloneNode(false) as Element;\n            //         const tId = cloneText.getAttribute(\"id\");\n            //         if (tId) {\n            //             cloneText.removeAttribute(\"id\");\n            //         }\n            //         // hoist DAISY2 text ID to parent par\n            //         newPar.setAttribute(\"id\", (tId ? tId : \"id\") + \"r2__\" + iClone);\n            //         newPar.appendChild(cloneText);\n            //     } else {\n            //         newPar.setAttribute(\"id\", \"id\" + \"r2__\" + iClone);\n            //     }\n            //     newPar.appendChild(audio);\n            //     newPar.appendChild(smilXmlDoc.createTextNode(\"\\n\"));\n\n            //     if (par.insertAdjacentElement) {\n            //         par.insertAdjacentElement(\"afterend\", newPar);\n            //     } else if (par.parentNode) {\n            //         par.parentNode.insertBefore(newPar, par.nextElementSibling);\n            //     }\n            // }\n        }\n        par.removeChild(seq);\n    }\n\n    // const afterXML = new xmldom.XMLSerializer().serializeToString(smilXmlDoc.documentElement as unknown as xmldom.Element);\n    // debug(\"afterXML\", _smilPathInZip, afterXML);\n};\n\n// mo.initialized true/false is automatically handled\nexport const lazyLoadMediaOverlays = async (publication: Publication, mo: MediaOverlayNode) => {\n\n    if (mo.initialized || !mo.SmilPathInZip) {\n        return;\n    }\n\n    let link: Link | undefined;\n    if (publication.Resources) {\n\n        link = publication.Resources.find((l) => {\n            if (l.Href === mo.SmilPathInZip) {\n                return true;\n            }\n            return false;\n        });\n        if (!link) {\n            if (publication.Spine) {\n                link = publication.Spine.find((l) => {\n                    if (l.Href === mo.SmilPathInZip) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n        }\n        if (!link) {\n            const err = \"Asset not declared in publication spine/resources! \" + mo.SmilPathInZip;\n            debug(err);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(err);\n        }\n    }\n\n    const zipInternal = publication.findFromInternal(\"zip\");\n    if (!zipInternal) {\n        return;\n    }\n    const zip = zipInternal.Value as IZip;\n\n    const has = await zipHasEntry(zip, mo.SmilPathInZip, undefined);\n    if (!has) {\n        const err = `NOT IN ZIP (lazyLoadMediaOverlays): ${mo.SmilPathInZip}`;\n        debug(err);\n        const zipEntries = await zip.getEntries();\n        for (const zipEntry of zipEntries) {\n            if (zipEntry.startsWith(\"__MACOSX/\")) {\n                continue;\n            }\n            debug(zipEntry);\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    let smilZipStream_: IStreamAndLength;\n    try {\n        smilZipStream_ = await zip.entryStreamPromise(mo.SmilPathInZip);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    if (link && link.Properties && link.Properties.Encrypted) {\n        let decryptFail = false;\n        let transformedStream: IStreamAndLength;\n        try {\n            transformedStream = await Transformers.tryStream(\n                publication, link, undefined,\n                smilZipStream_,\n                false,\n                0,\n                0,\n                undefined,\n            );\n        } catch (err) {\n            debug(err);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(err);\n        }\n        if (transformedStream) {\n            smilZipStream_ = transformedStream;\n        } else {\n            decryptFail = true;\n        }\n\n        if (decryptFail) {\n            const err = \"Encryption scheme not supported.\";\n            debug(err);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            return Promise.reject(err);\n        }\n    }\n\n    const smilZipStream = smilZipStream_.stream;\n\n    let smilZipData: Buffer;\n    try {\n        smilZipData = await streamToBufferPromise(smilZipStream);\n    } catch (err) {\n        debug(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    let smilStr = removeUTF8BOM(smilZipData.toString(\"utf8\"));\n\n    const iStart = smilStr.indexOf(\"<smil\");\n    if (iStart >= 0) {\n        const iEnd = smilStr.indexOf(\">\", iStart);\n        if (iEnd > iStart) {\n            const clip = smilStr.substr(iStart, iEnd - iStart);\n            if (clip.indexOf(\"xmlns\") < 0) {\n                smilStr = smilStr.replace(/<smil/, \"<smil xmlns=\\\"http://www.w3.org/ns/SMIL\\\" \");\n            }\n        }\n    }\n\n    const smilXmlDoc = new xmldom.DOMParser().parseFromString(smilStr, \"application/xml\") as unknown as Document;\n\n    const nccZipEntry = (await zip.getEntries()).find((entry) => {\n        return /ncc\\.html$/i.test(entry);\n    });\n    if (nccZipEntry) {\n        flattenDaisy2SmilAudioSeq(mo.SmilPathInZip, smilXmlDoc);\n    }\n\n    const smil = XML.deserialize<SMIL>(smilXmlDoc, SMIL);\n    smil.ZipPath = mo.SmilPathInZip;\n\n    mo.initialized = true;\n    debug(\"PARSED SMIL: \" + mo.SmilPathInZip);\n\n    // debug(mo.SmilPathInZip, new xmldom.XMLSerializer().serializeToString(smilXmlDoc as unknown as xmldom.Document));\n    // debug(JSON.stringify(smil, null, 4));\n\n    // breakLength: 100  maxArrayLength: undefined\n    // debug(util.inspect(smil,\n    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    mo.Role = [];\n    mo.Role.push(\"section\");\n\n    // debug(smil);\n    // debug(JSON.stringify(smil, null, 4));\n\n    if (smil.Head?.Meta) {\n        for (const m of smil.Head.Meta) {\n            if (!m.Content) {\n                continue;\n            }\n            if (m.Name === \"dtb:totalElapsedTime\" || m.Name === \"ncc:totalElapsedTime\") {\n                mo.totalElapsedTime = timeStrToSeconds(m.Content);\n            }\n            if (m.Name === \"ncc:timeInThisSmil\") {\n                const dur = timeStrToSeconds(m.Content);\n                if (dur !== 0) { // parsing failure?\n                    mo.duration = dur;\n                }\n            }\n        }\n    }\n\n    if (smil.Body) {\n        if (smil.Body.Duration) {\n            const dur = timeStrToSeconds(smil.Body.Duration);\n            if (dur !== 0) { // parsing failure?\n                if (mo.duration && mo.duration !== dur) {\n                    debug(\"SMIL DUR DIFF 1: \" + dur + \" != \" + mo.duration);\n                }\n                mo.duration = dur;\n            }\n        }\n        if (smil.Body.EpubType) {\n            const roles = parseSpaceSeparatedString(smil.Body.EpubType);\n            for (const role of roles) {\n                if (!role.length) {\n                    continue;\n                }\n                if (mo.Role.indexOf(role) < 0) {\n                    mo.Role.push(role);\n                }\n            }\n        }\n\n        if (smil.Body.Class) {\n            if (smil.Body.Class.indexOf(\"pagenum\") >= 0) {\n                mo.Role.push(\"pagebreak\");\n            } else if (smil.Body.Class.indexOf(\"note\") >= 0) {\n                mo.Role.push(\"note\");\n            } else if (smil.Body.Class.indexOf(\"sidebar\") >= 0) {\n                mo.Role.push(\"sidebar\");\n            } else if (smil.Body.Class.indexOf(\"annotation\") >= 0) {\n                mo.Role.push(\"annotation\");\n            }\n        } else if (smil.Body.CustomTest) {\n            if (smil.Body.CustomTest.indexOf(\"pagenum\") >= 0) {\n                mo.Role.push(\"pagebreak\");\n            } else if (smil.Body.CustomTest.indexOf(\"note\") >= 0) {\n                mo.Role.push(\"note\");\n            } else if (smil.Body.CustomTest.indexOf(\"sidebar\") >= 0) {\n                mo.Role.push(\"sidebar\");\n            } else if (smil.Body.CustomTest.indexOf(\"annotation\") >= 0) {\n                mo.Role.push(\"annotation\");\n            }\n        } else if (smil.Body.SystemRequired) {\n            if (smil.Body.SystemRequired.indexOf(\"pagenumber-on\") >= 0) {\n                mo.Role.push(\"pagebreak\");\n            } else if (smil.Body.SystemRequired.indexOf(\"note-on\") >= 0) {\n                mo.Role.push(\"note\");\n            // } else if (smil.Body.SystemRequired.indexOf(\"footnote-on\") >= 0) {\n            //     mo.Role.push(\"note\");\n            // } else if (smil.Body.SystemRequired.indexOf(\"prodnote-on\") >= 0) {\n            //     mo.Role.push(\"note\");\n            } else if (smil.Body.SystemRequired.indexOf(\"sidebar-on\") >= 0) {\n                mo.Role.push(\"sidebar\");\n            }\n        }\n        if (smil.Body.TextRef) {\n            const smilBodyTextRefDecoded = smil.Body.TextRefDecoded;\n            if (!smilBodyTextRefDecoded) {\n                debug(\"!?smilBodyTextRefDecoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), smilBodyTextRefDecoded)\n                    .replace(/\\\\/g, \"/\");\n                mo.Text = zipPath;\n            }\n        }\n        if (smil.Body.Children && smil.Body.Children.length) {\n\n            const getDur = !smil.Body.Duration && smil.Body.Children.length === 1;\n\n            smil.Body.Children.forEach((seqChild) => {\n                if (getDur && seqChild.Duration) {\n                    const dur = timeStrToSeconds(seqChild.Duration);\n                    if (dur !== 0) { // parsing failure?\n                        if (mo.duration && mo.duration !== dur) {\n                            debug(\"SMIL DUR DIFF 2: \" + dur + \" != \" + mo.duration);\n                        }\n                        mo.duration = dur;\n                    }\n                }\n                if (!mo.Children) {\n                    mo.Children = [];\n                }\n\n                addSeqToMediaOverlay(smil, publication, mo, mo.Children, seqChild);\n            });\n        }\n    }\n\n    // debug(JSON.stringify(mo, null, 4));\n\n    // if ((process.env as NodeJS.ProcessEnv).BREAK) {\n    //     throw new Error(\"BREAK\");\n    // }\n    // (process.env as NodeJS.ProcessEnv).BREAK = \"break!\";\n    return;\n};\n\nconst addSeqToMediaOverlay = (\n    smil: SMIL, publication: Publication,\n    rootMO: MediaOverlayNode, mo: MediaOverlayNode[], seqChild: SeqOrPar) => {\n\n    if (!smil.ZipPath) {\n        return;\n    }\n\n    const moc = new MediaOverlayNode();\n    moc.initialized = rootMO.initialized;\n    let doAdd = true;\n\n    if (seqChild.Duration) {\n        const dur = timeStrToSeconds(seqChild.Duration);\n        if (dur !== 0) { // parsing failure?\n            moc.duration = dur;\n        }\n    }\n\n    if (seqChild instanceof Seq) {\n        moc.Role = [];\n        moc.Role.push(\"section\");\n\n        const seq = seqChild as Seq;\n\n        if (seq.ID) {\n            moc.SeqID = seq.ID;\n        }\n\n        if (seq.EpubType) {\n            const roles = parseSpaceSeparatedString(seq.EpubType);\n            for (const role of roles) {\n                if (!role.length) {\n                    continue;\n                }\n                if (moc.Role.indexOf(role) < 0) {\n                    moc.Role.push(role);\n                }\n            }\n        }\n        if (seq.Class) {\n            if (seq.Class.indexOf(\"pagenum\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (seq.Class.indexOf(\"note\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            } else if (seq.Class.indexOf(\"sidebar\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            } else if (seq.Class.indexOf(\"annotation\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"annotation\");\n            }\n        } else if (seq.CustomTest) {\n            if (seq.CustomTest.indexOf(\"pagenum\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (seq.CustomTest.indexOf(\"note\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            } else if (seq.CustomTest.indexOf(\"sidebar\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            } else if (seq.CustomTest.indexOf(\"annotation\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"annotation\");\n            }\n        } else if (seq.SystemRequired) {\n            if (seq.SystemRequired.indexOf(\"pagenumber-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (seq.SystemRequired.indexOf(\"note-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            // }  else if (seq.SystemRequired.indexOf(\"footnote-on\") >= 0) {\n            //     if (!moc.Role) {\n            //         moc.Role = [];\n            //     }\n            //     moc.Role.push(\"note\");\n            // } else if (seq.SystemRequired.indexOf(\"prodnote-on\") >= 0) {\n            //     if (!moc.Role) {\n            //         moc.Role = [];\n            //     }\n            //     moc.Role.push(\"note\");\n            } else if (seq.SystemRequired.indexOf(\"sidebar-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            }\n        }\n        if (seq.TextRef) {\n            const seqTextRefDecoded = seq.TextRefDecoded;\n            if (!seqTextRefDecoded) {\n                debug(\"!?seqTextRefDecoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), seqTextRefDecoded)\n                    .replace(/\\\\/g, \"/\");\n                moc.Text = zipPath;\n            }\n        }\n\n        if (seq.Children && seq.Children.length) {\n            seq.Children.forEach((child) => {\n                if (!moc.Children) {\n                    moc.Children = [];\n                }\n                addSeqToMediaOverlay(smil, publication, rootMO, moc.Children, child);\n            });\n        }\n    } else { // Par\n        const par = seqChild as Par;\n\n        if (par.ID) {\n            moc.ParID = par.ID;\n        }\n\n        if (par.EpubType) {\n            const roles = parseSpaceSeparatedString(par.EpubType);\n            for (const role of roles) {\n                if (!role.length) {\n                    continue;\n                }\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                if (moc.Role.indexOf(role) < 0) {\n                    moc.Role.push(role);\n                }\n            }\n        }\n        if (par.Class) {\n            if (par.Class.indexOf(\"pagenum\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (par.Class.indexOf(\"note\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            } else if (par.Class.indexOf(\"sidebar\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            } else if (par.Class.indexOf(\"annotation\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"annotation\");\n            }\n        } else if (par.CustomTest) {\n            if (par.CustomTest.indexOf(\"pagenum\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (par.CustomTest.indexOf(\"note\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            } else if (par.CustomTest.indexOf(\"sidebar\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            } else if (par.CustomTest.indexOf(\"annotation\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"annotation\");\n            }\n        } else if (par.SystemRequired) {\n            if (par.SystemRequired.indexOf(\"pagenumber-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"pagebreak\");\n            } else if (par.SystemRequired.indexOf(\"note-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"note\");\n            // } else if (par.SystemRequired.indexOf(\"footnote-on\") >= 0) {\n            //     if (!moc.Role) {\n            //         moc.Role = [];\n            //     }\n            //     moc.Role.push(\"note\");\n            // } else if (par.SystemRequired.indexOf(\"prodnote-on\") >= 0) {\n            //     if (!moc.Role) {\n            //         moc.Role = [];\n            //     }\n            //     moc.Role.push(\"note\");\n            } else if (par.SystemRequired.indexOf(\"sidebar-on\") >= 0) {\n                if (!moc.Role) {\n                    moc.Role = [];\n                }\n                moc.Role.push(\"sidebar\");\n            }\n        }\n        if (par.Text && par.Text.Src) {\n            const parTextSrcDcoded = par.Text.SrcDecoded;\n            if (!parTextSrcDcoded) {\n                debug(\"?!parTextSrcDcoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), parTextSrcDcoded)\n                    .replace(/\\\\/g, \"/\");\n                moc.Text = zipPath;\n            }\n\n            if (par.Text.ID) {\n                moc.TextID = par.Text.ID;\n            }\n        }\n        if (par.Audio && par.Audio.Src) {\n            const parAudioSrcDcoded = par.Audio.SrcDecoded;\n            if (!parAudioSrcDcoded) {\n                debug(\"?!parAudioSrcDcoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), parAudioSrcDcoded)\n                    .replace(/\\\\/g, \"/\");\n                moc.Audio = zipPath;\n                moc.Audio += \"#t=\";\n\n                const begin = par.Audio.ClipBegin ? timeStrToSeconds(par.Audio.ClipBegin) : 0;\n                moc.AudioClipBegin = begin;\n                const end = par.Audio.ClipEnd ? timeStrToSeconds(par.Audio.ClipEnd) : 0;\n                moc.AudioClipEnd = end;\n\n                moc.Audio += begin.toString();\n                if (par.Audio.ClipEnd) {\n                    moc.Audio += \",\";\n                    moc.Audio += end.toString();\n                }\n            }\n\n            if (par.Audio.ID) {\n                moc.AudioID = par.Audio.ID;\n            }\n        }\n        if (par.Video && par.Video.Src) {\n            const parVideoSrcDcoded = par.Video.SrcDecoded;\n            if (!parVideoSrcDcoded) {\n                debug(\"?!parVideoSrcDcoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), parVideoSrcDcoded)\n                    .replace(/\\\\/g, \"/\");\n                moc.Video = zipPath;\n                moc.Video += \"#t=\";\n\n                const begin = par.Video.ClipBegin ? timeStrToSeconds(par.Video.ClipBegin) : 0;\n                moc.VideoClipBegin = begin;\n                const end = par.Video.ClipEnd ? timeStrToSeconds(par.Video.ClipEnd) : 0;\n                moc.VideoClipEnd = end;\n\n                moc.Video += begin.toString();\n                if (par.Video.ClipEnd) {\n                    moc.Video += \",\";\n                    moc.Video += end.toString();\n                }\n            }\n\n            if (par.Video.ID) {\n                moc.VideoID = par.Video.ID;\n            }\n        }\n        if (par.Img && par.Img.Src) {\n            const parImgSrcDcoded = par.Img.SrcDecoded;\n            if (!parImgSrcDcoded) {\n                debug(\"?!parImgSrcDcoded\");\n            } else {\n                const zipPath = path.join(path.dirname(smil.ZipPath), parImgSrcDcoded)\n                    .replace(/\\\\/g, \"/\");\n                debug(\"SMIL IMG skipped: \" + zipPath);\n            }\n            if (!par.Audio && !par.Video && !par.Text) {\n                moc.initialized = false;\n                doAdd = false;\n            }\n\n            if (par.Img.ID) {\n                moc.ImgID = par.Img.ID;\n            }\n        }\n    }\n    if (doAdd) {\n        mo.push(moc);\n    } else {\n        debug(\"SMIL MO skip: \", moc, seqChild);\n    }\n};\n\nexport const updateDurations = (dur: number | undefined, link: Link) => {\n    if (!dur || !link.MediaOverlays) {\n        return;\n    }\n\n    if (!link.Duration) {\n        link.Duration = dur;\n    }\n    if (link.Alternate) {\n        for (const altLink of link.Alternate) {\n            if (altLink.TypeLink === \"application/vnd.syncnarr+json\") {\n                if (!altLink.Duration) {\n                    altLink.Duration = dur;\n                }\n            }\n        }\n    }\n};\n"]}