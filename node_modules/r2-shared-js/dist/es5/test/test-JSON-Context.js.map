{"version":3,"file":"test-JSON-Context.js","sourceRoot":"","sources":["../../../test/test-JSON-Context.ts"],"names":[],"mappings":"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","sourcesContent":["import test from \"ava\";\nimport * as path from \"path\";\n\nimport { Publication } from \"@models/publication\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { JsonArray, TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_SHARED } from \"../src/init-globals\";\nimport { checkType_Array, checkType_String, inspect, logJSON } from \"./helpers\";\n\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\n// ==========================\n\nconst contextStr1 = \"http://context1\";\nconst contextStr2 = \"http://context2\";\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Publication.Context => string[]\", (t) => {\n\n    const pub = new Publication();\n    pub.Context = [];\n    pub.Context.push(contextStr1);\n    pub.Context.push(contextStr2);\n    inspect(pub);\n\n    const json = TaJsonSerialize(pub);\n    logJSON(json);\n\n    checkType_Array(t, json[\"@context\"]);\n    const arr = json[\"@context\"] as JsonArray;\n    t.is(arr.length, 2);\n\n    checkType_String(t, arr[0]);\n    t.is(arr[0], contextStr1);\n\n    checkType_String(t, arr[1]);\n    t.is(arr[1], contextStr2);\n});\n\n// see IPropertyConverter.collapseArrayWithSingleItem()\n//\n// test(\"JSON SERIALIZE: Publication.Context => string[1] NO collapse-array\", (t) => {\n\n//     const pub = new Publication();\n//     pub.Context = [contextStr1];\n//     inspect(pub);\n\n//     const json = TaJsonSerialize(pub);\n//     // // (normalizes single-item array to the item value itself)\n//     // traverseJsonObjects(json,\n//     //     (obj, parent, keyInParent) => {\n//     //         if (parent && obj instanceof Array && obj.length === 1) {\n//     //             parent[keyInParent] = obj[0];\n//     //         }\n//     //     });\n//     logJSON(json);\n\n//     checkType_Array(t, json[\"@context\"]);\n//     t.is(json[\"@context\"].length, 1);\n//     checkType_String(t, json[\"@context\"][0]);\n//     t.is(json[\"@context\"][0], contextStr1);\n// });\n\ntest(\"JSON SERIALIZE: Publication.Context => string[1] collapse-array\", (t) => {\n\n    const pub = new Publication();\n    pub.Context = [contextStr1];\n    inspect(pub);\n\n    const json = TaJsonSerialize(pub);\n    // // (normalizes single-item array to the item value itself)\n    // traverseJsonObjects(json,\n    //     (obj, parent, keyInParent) => {\n    //         if (parent && obj instanceof Array && obj.length === 1) {\n    //             parent[keyInParent] = obj[0];\n    //         }\n    //     });\n    logJSON(json);\n\n    checkType_String(t, json[\"@context\"]);\n    t.is(json[\"@context\"], contextStr1);\n});\n\ntest(\"JSON DESERIALIZE: Publication.Context => string[]\", (t) => {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json[\"@context\"] = [contextStr1, contextStr2];\n    logJSON(json);\n\n    const pub: Publication = TaJsonDeserialize<Publication>(json, Publication);\n    inspect(pub);\n\n    checkType_Array(t, pub.Context);\n    t.is(pub.Context.length, 2);\n\n    checkType_String(t, pub.Context[0]);\n    t.is(pub.Context[0], contextStr1);\n\n    checkType_String(t, pub.Context[1]);\n    t.is(pub.Context[1], contextStr2);\n});\n\ntest(\"JSON DESERIALIZE: Publication.Context => string[1]\", (t) => {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json[\"@context\"] = [contextStr1];\n    logJSON(json);\n\n    const pub: Publication = TaJsonDeserialize<Publication>(json, Publication);\n    inspect(pub);\n\n    checkType_Array(t, pub.Context);\n    t.is(pub.Context.length, 1);\n\n    checkType_String(t, pub.Context[0]);\n    t.is(pub.Context[0], contextStr1);\n});\n\ntest(\"JSON DESERIALIZE: Publication.Context => string\", (t) => {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json[\"@context\"] = contextStr1;\n    logJSON(json);\n\n    const pub: Publication = TaJsonDeserialize<Publication>(json, Publication);\n    inspect(pub);\n\n    checkType_Array(t, pub.Context);\n    t.is(pub.Context.length, 1);\n\n    checkType_String(t, pub.Context[0]);\n    t.is(pub.Context[0], contextStr1);\n});\n"]}