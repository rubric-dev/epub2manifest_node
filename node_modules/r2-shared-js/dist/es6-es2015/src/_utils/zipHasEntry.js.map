{"version":3,"file":"zipHasEntry.js","sourceRoot":"","sources":["../../../../src/_utils/zipHasEntry.ts"],"names":[],"mappings":";;AAaA,kCA0BC;;AAhCD,gCAAgC;AAIhC,MAAM,KAAK,GAAG,MAAM,CAAC,6BAA6B,CAAC,CAAC;AAEpD,SAAsB,WAAW,CAAC,GAAS,EAAE,OAAe,EAAE,YAAgC;;QAC1F,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEhC,IAAK,GAAW,CAAC,aAAa,EAAE,CAAC;YAC7B,IAAI,CAAC;gBAED,GAAG,GAAG,MAAO,GAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpD,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;QACL,CAAC;QACD,IAAI,CAAC,GAAG,IAAI,YAAY,IAAI,YAAY,KAAK,OAAO,EAAE,CAAC;YACnD,KAAK,CAAC,gBAAgB,OAAO,OAAO,YAAY,EAAE,CAAC,CAAC;YAEpD,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAEjC,IAAK,GAAW,CAAC,aAAa,EAAE,CAAC;gBAC7B,IAAI,CAAC;oBAED,GAAG,GAAG,MAAO,GAAW,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBACzD,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC;YACL,CAAC;QACL,CAAC;QACD,OAAO,GAAG,CAAC;IACf,CAAC;CAAA","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\n\nimport { IZip } from \"@r2-utils-js/_utils/zip/zip\";\n\nconst debug = debug_(\"r2:shared#utils/zipHasEntry\");\n\nexport async function zipHasEntry(zip: IZip, zipPath: string, zipPathOther: string | undefined): Promise<boolean> {\n    let has = zip.hasEntry(zipPath);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if ((zip as any).hasEntryAsync) { // hacky!!! (HTTP fetch)\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            has = await (zip as any).hasEntryAsync(zipPath);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    if (!has && zipPathOther && zipPathOther !== zipPath) {\n        debug(`zipHasEntry: ${zipPath} => ${zipPathOther}`);\n\n        has = zip.hasEntry(zipPathOther);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((zip as any).hasEntryAsync) { // hacky!!! (HTTP fetch)\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                has = await (zip as any).hasEntryAsync(zipPathOther);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    }\n    return has;\n}\n"]}