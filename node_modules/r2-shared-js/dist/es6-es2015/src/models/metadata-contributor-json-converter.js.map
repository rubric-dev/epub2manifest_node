{"version":3,"file":"metadata-contributor-json-converter.js","sourceRoot":"","sources":["../../../../src/models/metadata-contributor-json-converter.ts"],"names":[],"mappings":";;;AASA,0DAA6E;AAE7E,iEAAqD;AAIrD,MAAa,wBAAwB;IAC1B,SAAS,CAAC,CAAc;QAC3B,IAAI,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,CAAC,MAAM;YACT,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3B,CAAC,CAAC,CAAC,UAAU;YACb,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,WAAW,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;YAEhC,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gBAC7B,OAAO,CAAC,CAAC,IAAI,CAAC;YAClB,CAAC;QAIL,CAAC;QACD,OAAO,IAAA,8BAAe,EAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAEM,WAAW,CAAC,KAAgB;QAO/B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,GAAG,IAAI,kCAAW,EAAE,CAAC;YAC5B,CAAC,CAAC,IAAI,GAAG,KAAe,CAAC;YACzB,OAAO,CAAC,CAAC;QACb,CAAC;QAcD,OAAO,IAAA,gCAAiB,EAAc,KAAK,EAAE,kCAAW,CAAC,CAAC;IAC9D,CAAC;IAEM,2BAA2B;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAlDD,4DAkDC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { IPropertyConverter, JsonValue } from \"ta-json-x\";\n\nimport { TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\n\nimport { Contributor } from \"./metadata-contributor\";\n\n// import { IStringMap } from \"./metadata-multilang\";\n\nexport class JsonContributorConverter implements IPropertyConverter {\n    public serialize(c: Contributor): JsonValue {\n        if (c.Name &&\n            !c.SortAs &&\n            (!c.Role || !c.Role.length) &&\n            !c.Identifier &&\n            (typeof c.Position === \"undefined\") &&\n            (!c.Links || !c.Links.length)) {\n\n            if (typeof c.Name === \"string\") {\n                return c.Name;\n            }\n            // else if (typeof c.Name === \"object\") {\n            //     return c.Name; // IStringMap\n            // }\n        }\n        return TaJsonSerialize(c);\n    }\n\n    public deserialize(value: JsonValue): Contributor {\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/readium/webpub-manifest/blob/0ac78ab5c270a608c39b4b04fc90bd9b1d281896/schema/contributor.schema.json#L7\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/readium/webpub-manifest/blob/0ac78ab5c270a608c39b4b04fc90bd9b1d281896/schema/contributor-object.schema.json#L7\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/readium/webpub-manifest/blob/0ac78ab5c270a608c39b4b04fc90bd9b1d281896/schema/contributor-object.schema.json#L52\n        if (typeof value === \"string\") {\n            const c = new Contributor();\n            c.Name = value as string;\n            return c;\n        }\n        // else if (typeof value === \"object\" && !(value as any)[\"name\"]) { // tslint:disable-line:no-string-literal\n        //     const c = new Contributor();\n        //     c.Name = {} as IStringMap;\n        //     const keys = Object.keys(value as any);\n        //     keys.forEach((key: string) => {\n        //         // TODO? check key is BCP47 language tag?\n        //         const val = (value as any)[key];\n        //         if (typeof val === \"string\") {\n        //             (c.Name as IStringMap)[key] = val;\n        //         }\n        //     });\n        //     return c;\n        // }\n        return TaJsonDeserialize<Contributor>(value, Contributor);\n    }\n\n    public collapseArrayWithSingleItem(): boolean {\n        return true;\n    }\n}\n"]}