{"version":3,"file":"container-rootfile.js","sourceRoot":"","sources":["../../../../../src/parser/epub/container-rootfile.ts"],"names":[],"mappings":";;;;AAOA,qEAAgF;AAEhF,sDAAsD;AAG/C,IAAM,QAAQ,GAAd,MAAM,QAAQ;IAYjB,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACD,IAAI,IAAI,CAAC,IAAY;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IACjC,CAAC;IAED,IAAI,WAAW;QACX,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;YAC5B,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,IAAA,wBAAY,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5D,CAAC;IACD,IAAI,WAAW,CAAC,IAAwB;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IACM,cAAc,CAAC,IAAY;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;CACJ,CAAA;AAzCY,4BAAQ;AAKV;IADN,IAAA,gCAAgB,EAAC,aAAa,CAAC;;sCACX;AAGd;IADN,IAAA,gCAAgB,EAAC,UAAU,CAAC;;yCACL;AAGjB;IADN,IAAA,gCAAgB,EAAC,YAAY,CAAC;;uCACT;mBAXb,QAAQ;IADpB,IAAA,yBAAS,GAAE;GACC,QAAQ,CAyCpB","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { tryDecodeURI } from \"../../_utils/decodeURI\";\n\n@XmlObject()\nexport class Rootfile {\n\n    // XPATH ROOT: /epub:container/epub:rootfiles/epub:rootfile\n\n    @XmlXPathSelector(\"@media-type\")\n    public Type!: string;\n\n    @XmlXPathSelector(\"@version\")\n    public Version!: string;\n\n    @XmlXPathSelector(\"@full-path\")\n    public Path1!: string;\n    get Path(): string {\n        return this.Path1;\n    }\n    set Path(href: string) {\n        this.Path1 = href;\n        this._urlDecoded = undefined;\n    }\n    private _urlDecoded: string | undefined | null;\n    get PathDecoded(): string | undefined {\n        if (this._urlDecoded) {\n            return this._urlDecoded;\n        }\n        if (this._urlDecoded === null) {\n            return undefined;\n        }\n        if (!this.Path) {\n            this._urlDecoded = null;\n            return undefined;\n        }\n        this._urlDecoded = tryDecodeURI(this.Path);\n        return !this._urlDecoded ? undefined : this._urlDecoded;\n    }\n    set PathDecoded(href: string | undefined) {\n        this._urlDecoded = href;\n    }\n    public setPathDecoded(href: string) {\n        this.Path = href;\n        this.PathDecoded = href;\n    }\n}\n"]}