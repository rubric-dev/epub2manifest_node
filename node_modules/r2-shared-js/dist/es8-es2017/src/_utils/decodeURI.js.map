{"version":3,"file":"decodeURI.js","sourceRoot":"","sources":["../../../../src/_utils/decodeURI.ts"],"names":[],"mappings":";;AAOA,oCAgBC;AAhBD,SAAgB,YAAY,CAAC,GAAuB;IAChD,IAAI,CAAC,GAAG,EAAE,CAAC;QACP,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,IAAI,CAAC;QAMD,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,OAAO,GAAG,CAAC;AACf,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nexport function tryDecodeURI(url: string | undefined): string | null {\n    if (!url) {\n        return null;\n    }\n    try {\n        // note that with decodeURI(),\n        // %20 becomes space character, but %2C (for example) does not become comma \",\"\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\n        // vs.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\n        return decodeURIComponent(url);\n    } catch (err) { // can occur with \"%\" literal char inside non-escaped URL\n        console.log(url);\n        console.log(err);\n    }\n    return url;\n}\n"]}