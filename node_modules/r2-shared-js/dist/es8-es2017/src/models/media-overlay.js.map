{"version":3,"file":"media-overlay.js","sourceRoot":"","sources":["../../../../src/models/media-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// https://github.com/edcarroll/ta-json\nimport { JsonConverter, JsonElementType, JsonObject, JsonProperty } from \"ta-json-x\";\n\nimport { JsonStringConverter } from \"@r2-utils-js/_utils/ta-json-string-converter\";\n\n// http://www.idpf.org/epub/31/spec/epub-mediaoverlays.html#app-clock-examples\n// https://www.w3.org/TR/2008/REC-SMIL3-20081201/smil-timing.html#q22\nexport function timeStrToSeconds(timeStr: string): number {\n    if (!timeStr) {\n        return 0;\n    }\n\n    // Normal Play Time\n    timeStr = timeStr.replace(\"npt=\", \"\");\n\n    let hours = 0;\n    let minutes = 0;\n    let seconds = 0;\n\n    try {\n        const iMin = timeStr.indexOf(\"min\");\n        if (iMin > 0) {\n            // time.fraction(min)\n            const minsStr = timeStr.substr(0, iMin);\n            minutes = parseFloat(minsStr);\n        } else {\n            const iMs = timeStr.indexOf(\"ms\");\n            if (iMs > 0) {\n                // time.fraction(ms)\n                const msStr = timeStr.substr(0, iMs);\n                const ms = parseFloat(msStr);\n                seconds = ms / 1000;\n            } else {\n                const iS = timeStr.indexOf(\"s\");\n                if (iS > 0) {\n                    // time.fraction(s)\n                    const sStr = timeStr.substr(0, iS);\n                    seconds = parseFloat(sStr);\n                } else {\n                    const iH = timeStr.indexOf(\"h\");\n                    if (iH > 0) {\n                        // time.fraction(h)\n                        const hStr = timeStr.substr(0, iH);\n                        hours = parseFloat(hStr);\n                    } else {\n                        const arr = timeStr.split(\":\");\n                        if (arr.length === 1) {\n                            // ss.fraction\n                            seconds = parseFloat(arr[0]);\n\n                        } else if (arr.length === 2) {\n                            // mm:ss.fraction\n                            minutes = parseFloat(arr[0]);\n                            seconds = parseFloat(arr[1]);\n\n                        } else if (arr.length === 3) {\n                            // hh:mm:ss.fraction\n                            hours = parseFloat(arr[0]);\n                            minutes = parseFloat(arr[1]);\n                            seconds = parseFloat(arr[2]);\n\n                        } else {\n                            console.log(\"SMIL TIME CLOCK SYNTAX PARSING ERROR ??\");\n                            console.log(timeStr);\n                        }\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        console.log(err);\n        console.log(\"SMIL TIME CLOCK SYNTAX PARSING ERROR!\");\n        console.log(timeStr);\n        return 0;\n    }\n\n    return (hours * 3600) + (minutes * 60) + seconds; // total in seconds\n}\n\n// TODO: MEDIA OVERLAY not in JSON Schema\n// tslint:disable-next-line:max-line-length\n// https://github.com/readium/webpub-manifest/tree/master/schema\n// https://w3c.github.io/sync-media-pub/synchronized-narration.html#properties\n@JsonObject()\nexport class MediaOverlayNode {\n    @JsonProperty(\"text\")\n    public Text!: string; // URL already decodeURI()\n\n    @JsonProperty(\"audio\")\n    public Audio!: string; // URL already decodeURI()\n\n    @JsonProperty(\"video\")\n    public Video!: string; // URL already decodeURI()\n\n    @JsonProperty(\"role\")\n    @JsonConverter(JsonStringConverter)\n    @JsonElementType(String)\n    public Role!: string[];\n\n    @JsonProperty(\"narration\")\n    @JsonElementType(MediaOverlayNode)\n    public Children!: MediaOverlayNode[];\n\n    public SmilPathInZip: string | undefined; // URL already decodeURI()\n\n    public initialized = false;\n\n    public ParID: string | undefined;\n    public SeqID: string | undefined;\n    public TextID: string | undefined;\n    public AudioID: string | undefined;\n    public VideoID: string | undefined;\n    public ImgID: string | undefined;\n\n    public AudioClipBegin: number | undefined;\n    public AudioClipEnd: number | undefined;\n\n    public VideoClipBegin: number | undefined;\n    public VideoClipEnd: number | undefined;\n\n    public duration: number | undefined;\n    public totalElapsedTime: number | undefined;\n\n    // public inspect(depth: number, opts: any): string | null | undefined {\n    //     return \"MediaOverlay: \" + this.SmilPathInZip;\n    // }\n\n    // constructor(text: string = \"T3\") {\n    //     this._JsonConstructor(text);\n    // }\n\n    // @JsonConstructor()\n    // private _JsonConstructor(text: string = \"T2\") {\n    //     console.log(\"_JsonConstructor\");\n    //     console.log(\"!!!! \" + text);\n\n    //     this.Text = text;\n    // }\n\n    // @BeforeDeserialized()\n    // private _BeforeDeserialized() {\n    //     console.log(\"_BeforeDeserialized\");\n\n    //     this.Text = \"T1\";\n    //     // this.Audio = \"\";\n    // }\n\n    // @OnDeserialized()\n    //// tslint:disable-next-line:no-unused-variable\n    // protected _OnDeserialized() {\n    //     console.log(\"_OnDeserialized\");\n    //     console.log(\"==> \" + this.info);\n    // }\n\n    // public get info(): string {\n    //     return `${this.Text} + ${this.Audio} - ` + (this.Children ? this.Children.length : \"0\");\n    // }\n}\n"]}