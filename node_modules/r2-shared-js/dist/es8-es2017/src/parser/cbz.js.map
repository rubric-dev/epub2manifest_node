{"version":3,"file":"cbz.js","sourceRoot":"","sources":["../../../../src/parser/cbz.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as mime from \"mime-types\";\nimport * as path from \"path\";\nimport * as slugify from \"slugify\";\nimport * as xmldom from \"@xmldom/xmldom\";\n\nimport { Metadata } from \"@models/metadata\";\nimport { Contributor } from \"@models/metadata-contributor\";\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { XML } from \"@r2-utils-js/_utils/xml-js-mapper\";\nimport { IStreamAndLength, IZip } from \"@r2-utils-js/_utils/zip/zip\";\nimport { zipLoadPromise } from \"@r2-utils-js/_utils/zip/zipFactory\";\nimport { removeUTF8BOM } from \"@r2-utils-js/_utils/bom\";\n\nimport { tryDecodeURI } from \"../_utils/decodeURI\";\nimport { zipHasEntry } from \"../_utils/zipHasEntry\";\nimport { ComicInfo } from \"./comicrack/comicrack\";\nimport { addCoverDimensions } from \"./epub\";\n\nexport function isCBZPublication(filePath: string): boolean {\n\n    const fileName = path.basename(filePath);\n    const ext = path.extname(fileName);\n\n    const cbz = /\\.cbz$/i.test(ext);\n    return cbz;\n}\n\nexport async function CbzParsePromise(filePath: string): Promise<Publication> {\n\n    let zip: IZip;\n    try {\n        zip = await zipLoadPromise(filePath);\n    } catch (err) {\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(err);\n    }\n\n    if (!zip.hasEntries()) {\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(\"CBZ zip empty\");\n    }\n\n    const publication = new Publication();\n    publication.Context = [\"https://readium.org/webpub-manifest/context.jsonld\"];\n    publication.Metadata = new Metadata();\n    publication.Metadata.RDFType = \"http://schema.org/ComicIssue\";\n    publication.Metadata.Identifier = filePathToTitle(filePath);\n\n    publication.AddToInternal(\"type\", \"cbz\");\n    publication.AddToInternal(\"zip\", zip);\n\n    let comicInfoEntryName: string | undefined;\n\n    let entries: string[] | undefined;\n    try {\n        entries = await zip.getEntries();\n    } catch (err) {\n        console.log(err);\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject(\"Problem getting CBZ zip entries\");\n    }\n    if (entries) {\n        for (const entryName of entries) {\n            // console.log(\"++ZIP: entry\");\n\n            // console.log(entryName);\n\n            const link = new Link();\n            link.setHrefDecoded(entryName);\n\n            const mediaType = mime.lookup(entryName);\n            if (mediaType) {\n                // console.log(mediaType);\n\n                link.TypeLink = mediaType as string;\n            } else {\n                console.log(\"!!!!!! NO MEDIA TYPE?!\");\n            }\n\n            if (link.TypeLink && link.TypeLink.startsWith(\"image/\")) {\n                if (!publication.Spine) {\n                    publication.Spine = [];\n                }\n                publication.Spine.push(link);\n\n            } else if (entryName.endsWith(\"ComicInfo.xml\")) {\n                comicInfoEntryName = entryName;\n            }\n        }\n    }\n\n    if (!publication.Metadata.Title) {\n        publication.Metadata.Title = path.basename(filePath);\n    }\n\n    if (comicInfoEntryName) {\n        try {\n            const _b = await comicRackMetadata(zip, comicInfoEntryName, publication);\n            console.log(_b);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return publication;\n}\n\nconst filePathToTitle = (filePath: string): string => {\n    const fileName = path.basename(filePath);\n    return slugify(fileName, \"_\").replace(/[\\.]/g, \"_\");\n};\n\nconst comicRackMetadata = async (zip: IZip, entryName: string, publication: Publication) => {\n    const entryNameDecoded = tryDecodeURI(entryName);\n    if (!entryNameDecoded) {\n        return;\n    }\n\n    const has = await zipHasEntry(zip, entryNameDecoded, entryName);\n    if (!has) {\n        console.log(`NOT IN ZIP: ${entryName} --- ${entryNameDecoded}`);\n        const zipEntries = await zip.getEntries();\n        for (const zipEntry of zipEntries) {\n            if (zipEntry.startsWith(\"__MACOSX/\")) {\n                continue;\n            }\n            console.log(zipEntry);\n        }\n        return;\n    }\n\n    let comicZipStream_: IStreamAndLength;\n    try {\n        comicZipStream_ = await zip.entryStreamPromise(entryNameDecoded);\n    } catch (err) {\n        console.log(err);\n        return;\n    }\n    const comicZipStream = comicZipStream_.stream;\n    let comicZipData: Buffer;\n    try {\n        comicZipData = await streamToBufferPromise(comicZipStream);\n    } catch (err) {\n        console.log(err);\n        return;\n    }\n\n    const comicXmlStr = removeUTF8BOM(comicZipData.toString(\"utf8\"));\n    const comicXmlDoc = new xmldom.DOMParser().parseFromString(comicXmlStr, \"application/xml\") as unknown as Document;\n\n    const comicMeta = XML.deserialize<ComicInfo>(comicXmlDoc, ComicInfo);\n    comicMeta.ZipPath = entryNameDecoded;\n\n    if (!publication.Metadata) {\n        publication.Metadata = new Metadata();\n    }\n\n    if (comicMeta.Writer) {\n        const cont = new Contributor();\n        cont.Name = comicMeta.Writer;\n\n        if (!publication.Metadata.Author) {\n            publication.Metadata.Author = [];\n        }\n        publication.Metadata.Author.push(cont);\n    }\n\n    if (comicMeta.Penciller) {\n        const cont = new Contributor();\n        cont.Name = comicMeta.Writer;\n\n        if (!publication.Metadata.Penciler) {\n            publication.Metadata.Penciler = [];\n        }\n        publication.Metadata.Penciler.push(cont);\n    }\n\n    if (comicMeta.Colorist) {\n        const cont = new Contributor();\n        cont.Name = comicMeta.Writer;\n\n        if (!publication.Metadata.Colorist) {\n            publication.Metadata.Colorist = [];\n        }\n        publication.Metadata.Colorist.push(cont);\n    }\n\n    if (comicMeta.Inker) {\n        const cont = new Contributor();\n        cont.Name = comicMeta.Writer;\n\n        if (!publication.Metadata.Inker) {\n            publication.Metadata.Inker = [];\n        }\n        publication.Metadata.Inker.push(cont);\n    }\n\n    if (comicMeta.Title) {\n        publication.Metadata.Title = comicMeta.Title;\n    }\n\n    if (!publication.Metadata.Title) {\n        if (comicMeta.Series) {\n            let title = comicMeta.Series;\n            if (comicMeta.Number) {\n                title = title + \" - \" + comicMeta.Number;\n            }\n            publication.Metadata.Title = title;\n        }\n    }\n\n    if (comicMeta.Pages) {\n        for (const p of comicMeta.Pages) {\n            const l = new Link();\n            if (p.Type === \"FrontCover\") {\n                l.AddRel(\"cover\");\n                await addCoverDimensions(publication, l);\n            }\n            if (publication.Spine) {\n                l.setHrefDecoded(publication.Spine[p.Image].Href);\n            }\n            if (p.ImageHeight) {\n                l.Height = p.ImageHeight;\n            }\n            if (p.ImageWidth) {\n                l.Width = p.ImageWidth;\n            }\n            if (p.Bookmark) {\n                l.Title = p.Bookmark;\n            }\n            if (!publication.TOC) {\n                publication.TOC = [];\n            }\n            publication.TOC.push(l);\n        }\n    }\n};\n"]}