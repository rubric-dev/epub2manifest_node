{"version":3,"file":"ta-json-date-converter.js","sourceRoot":"","sources":["../../../../src/_utils/ta-json-date-converter.ts"],"names":[],"mappings":";;;AASA;IAAA;IAaA,CAAC;IAZU,qCAAS,GAAhB,UAAiB,QAA0B;QACvC,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;IAC9D,CAAC;IAEM,uCAAW,GAAlB,UAAmB,KAAgB;QAC/B,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAe,CAAC,CAAC;QACvC,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;IACpD,CAAC;IAEM,uDAA2B,GAAlC;QACI,OAAO,KAAK,CAAC;IACjB,CAAC;IACL,wBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,8CAAiB","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { IPropertyConverter, JsonValue } from \"ta-json-x\";\n\nexport class JsonDateConverter implements IPropertyConverter {\n    public serialize(property: Date | undefined): JsonValue {\n        return property ? property.toISOString() : \"Invalid Date\";\n    }\n\n    public deserialize(value: JsonValue): Date | undefined {\n        const date = new Date(value as string);\n        return isNaN(date.getTime()) ? undefined : date;\n    }\n\n    public collapseArrayWithSingleItem(): boolean {\n        return false;\n    }\n}\n"]}