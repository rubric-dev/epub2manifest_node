{"version":3,"file":"JsonPropertyEx.js","sourceRoot":"","sources":["../../../../../src/_utils/ta-json/JsonPropertyEx.ts"],"names":[],"mappings":";;AAwBA,wCAkCC;AAnDD,4BAA0B;AAE1B,8BAAgC;AAChC,uCAAyC;AACzC,kFAA6E;AAC7E,2BAA6B;AAE7B,IAAM,KAAK,GAAG,MAAM,CAAC,mCAAmC,CAAC,CAAC;AAG1D,SAAS,OAAO,CAAC,GAAQ;IAErB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EACxB,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAChF,CAAC;AAGD,SAAgB,cAAc,CAAC,YAAqB;IAEhD,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAExB,KAAK,CAAC,cAAc,CAAC,CAAC;IACtB,KAAK,CAAC,YAAY,CAAC,CAAC;IAGpB,OAAO,UAAC,MAAW,EAAE,GAAW;QAE5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,OAAO,CAAC,MAAM,CAAC,CAAC;QAEhB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,KAAK,CAAC,GAAG,CAAC,CAAC;QAEX,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACzD,IAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACnE,OAAO,CAAC,UAAU,CAAC,CAAC;QACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEvB,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAE5B,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC3C,IAAM,MAAM,GAAG,IAAA,iCAAa,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACjD,OAAO,CAAC,MAAM,CAAC,CAAC;QAEhB,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACjC,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAElB,OAAO,IAAA,wBAAY,EAAC,YAAY,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACnD,CAAC,CAAC;AACN,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport \"reflect-metadata\";\n\nimport * as debug_ from \"debug\";\nimport { JsonProperty } from \"ta-json-x\";\nimport { getDefinition } from \"ta-json-x/dist/cjs/classes/object-definition\";\nimport * as util from \"util\";\n\nconst debug = debug_(\"r2:utils#ta-json-x/JsonPropertyEx\");\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction inspect(obj: any) {\n    // breakLength: 100  maxArrayLength: undefined\n    console.log(util.inspect(obj,\n        { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function JsonPropertyEx(propertyName?: string): (target: any, key: string) => void {\n\n    debug(\"JsonPropertyEx\");\n\n    debug(\"propertyName\");\n    debug(propertyName);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target: any, key: string): void => {\n\n        debug(\"target\");\n        inspect(target);\n\n        debug(\"key\");\n        debug(key);\n\n        debug(\"Reflect.getMetadata('design:type', target, key)\");\n        const objectType = Reflect.getMetadata(\"design:type\", target, key);\n        inspect(objectType);\n        debug(objectType.name);\n\n        debug(\"target.constructor\");\n        inspect(target.constructor);\n\n        debug(\"getDefinition(target.constructor)\");\n        const objDef = getDefinition(target.constructor);\n        inspect(objDef);\n\n        debug(\"objDef.getProperty(key)\");\n        const property = objDef.getProperty(key);\n        inspect(property);\n\n        return JsonProperty(propertyName)(target, key);\n    };\n}\n"]}