{"version":3,"file":"object-definition.js","sourceRoot":"","sources":["../../../../../../src/_utils/xml-js-mapper/classes/object-definition.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { FunctionType, IXmlNamespaces } from \"../types\"; // IXmlValueObject\nimport { PropertyDefinition } from \"./property-definition\";\n\nexport class ObjectDefinition {\n    public ctr: () => void;\n    public beforeDeserialized: () => void;\n    public onDeserialized: () => void;\n    public discriminatorProperty: string | undefined = undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public discriminatorValue: any = undefined;\n    public properties: Map<string, PropertyDefinition>;\n    public namespaces: IXmlNamespaces | undefined;\n\n    constructor() {\n        this.ctr = () => undefined;\n        this.beforeDeserialized = () => undefined;\n        this.onDeserialized = () => undefined;\n        this.properties = new Map<string, PropertyDefinition>();\n    }\n\n    public getProperty(key: string) {\n        let property = this.properties.get(key);\n        if (!property) {\n            property = new PropertyDefinition();\n            this.properties.set(key, property);\n        }\n        return property;\n    }\n}\n\nexport const objectDefinitions: Map<FunctionType, ObjectDefinition> = new Map<FunctionType, ObjectDefinition>();\n\nexport function getDefinition(objectType: FunctionType): ObjectDefinition {\n\n    let definition = objectDefinitions.get(objectType);\n    if (!definition) {\n        definition = new ObjectDefinition();\n        objectDefinitions.set(objectType, definition);\n    }\n    return definition;\n}\n\nexport function getInheritanceChain(objectType: object): FunctionType[] {\n    if (!objectType) {\n        return [];\n    }\n    const parent = Object.getPrototypeOf(objectType);\n    return [objectType.constructor].concat(getInheritanceChain(parent));\n}\n\ninterface IFunctionTypeAndObjectDefinition {\n    functionType: FunctionType;\n    objectDefinition: ObjectDefinition;\n}\n\nfunction getChildObjectTypeDefinitions(parentObjectType: FunctionType): IFunctionTypeAndObjectDefinition[] {\n    const childDefs: IFunctionTypeAndObjectDefinition[] = [];\n\n    objectDefinitions.forEach((def, objectType) => {\n        const superObjectType = Object.getPrototypeOf(objectType.prototype).constructor;\n\n        if (superObjectType === parentObjectType) {\n            childDefs.push({ functionType: objectType, objectDefinition: def });\n        }\n    });\n\n    return childDefs;\n}\n\nexport function getTypedInheritanceChain(\n    objectType: FunctionType,\n    objectInstance?: Node, // IXmlValueObject\n): FunctionType[] {\n\n    const parentDef = objectDefinitions.get(objectType);\n\n    let childDefs: IFunctionTypeAndObjectDefinition[] = [];\n\n    if (objectInstance && parentDef && parentDef.discriminatorProperty) {\n        childDefs = childDefs.concat(getChildObjectTypeDefinitions(objectType));\n    }\n\n    let actualObjectType: FunctionType | undefined;\n\n    while (childDefs.length !== 0 && !actualObjectType) {\n        const ifo = childDefs.shift();\n        const objectType2 = ifo ? ifo.functionType : undefined;\n        const def = ifo ? ifo.objectDefinition : undefined;\n\n        if (def && def.hasOwnProperty(\"discriminatorValue\")) {\n            if (objectInstance\n                && parentDef\n                && parentDef.discriminatorProperty\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                && def.discriminatorValue === (objectInstance as any)[parentDef.discriminatorProperty]) {\n                if (def.hasOwnProperty(\"discriminatorProperty\")) {\n                    return getTypedInheritanceChain(objectType2, objectInstance);\n                }\n                actualObjectType = objectType2;\n            }\n        } else {\n            childDefs = childDefs.concat(getChildObjectTypeDefinitions(objectType2));\n        }\n    }\n\n    if (!actualObjectType) {\n        actualObjectType = objectType;\n    }\n\n    const inheritanceChain = new Set<FunctionType>(getInheritanceChain(Object.create(actualObjectType.prototype)));\n    return Array.from(inheritanceChain).filter((t) => objectDefinitions.has(t));\n}\n"]}