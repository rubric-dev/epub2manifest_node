{"version":3,"file":"buffer-converter.js","sourceRoot":"","sources":["../../../../../../src/_utils/xml-js-mapper/converters/buffer-converter.ts"],"names":[],"mappings":";;;AASA;IAAA;QACY,aAAQ,GAAmB,MAAM,CAAC;IAuB9C,CAAC;IAjBU,mCAAS,GAAhB,UAAiB,QAAgB;QAI7B,OAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEM,qCAAW,GAAlB,UAAmB,KAAa;QAI5B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAKL,sBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,0CAAe","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { IPropertyConverter } from \"./converter\";\n\nexport class BufferConverter implements IPropertyConverter {\n    private encoding: BufferEncoding = \"utf8\";\n\n    // constructor(encoding: string = \"json\") {\n    //     this.encoding = encoding;\n    // }\n\n    public serialize(property: Buffer): string {\n        // if (this.encoding === \"json\") {\n        //     return property.toJSON();\n        // }\n        return property.toString(this.encoding);\n    }\n\n    public deserialize(value: string): Buffer {\n        // if (this.encoding === \"json\") {\n        //     return Buffer.from((value as any).data);\n        // }\n        return Buffer.from(value, this.encoding);\n    }\n\n    // public collapseArrayWithSingleItem(): boolean {\n    //     return false;\n    // }\n}\n"]}