{"version":3,"file":"xml.js","sourceRoot":"","sources":["../../../../../src/_utils/xml-js-mapper/xml.ts"],"names":[],"mappings":";;;AASA,qDAAoD;AAGpD;IAAA;IAeA,CAAC;IAdiB,eAAW,GAAzB,UACI,cAAkC,EAClC,UAAyB,EACzB,OAAuB;QAEvB,IAAI,cAAc,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAChC,cAAc,GAAI,cAA2B,CAAC,eAA0B,CAAC;QAC7E,CAAC;QACD,OAAO,IAAA,yBAAW,EAAC,cAAyB,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;IAKL,UAAC;AAAD,CAAC,AAfD,IAeC;AAfY,kBAAG","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// import { serialize } from \"./methods/serialize\";\n\nimport { deserialize } from \"./methods/deserialize\";\nimport { FunctionType, IParseOptions } from \"./types\";\n\nexport class XML {\n    public static deserialize<T>(\n        objectInstance: Document | Element,\n        objectType?: FunctionType,\n        options?: IParseOptions): T {\n\n        if (objectInstance.nodeType === 9) { // DOCUMENT_NODE\n            objectInstance = (objectInstance as Document).documentElement as Element;\n        }\n        return deserialize(objectInstance as Element, objectType, options);\n    }\n\n    // public static serialize(value: any): XmlValue {\n    //     return serialize(value);\n    // }\n}\n"]}