{"version":3,"file":"perf-zip-crc-cli.js","sourceRoot":"","sources":["../../../../src/_utils/perf-zip-crc-cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// USAGE:\n// DEBUG=1 npm run cli-crc \"/PATH/TO/EPUBs/\" \"1\"\n// \"/PATH/TO/EPUBs/\" can be a single file \"/PATH/TO/EPUB.epub\" (instead of a folder)\n// => the DEBUG env var enables verbose console logging (remove completely to disable)\n// => the \"1\" trailing command line argument enables resource streaming (in addition to ZIP directory CRC checks)\n\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\n// ZIP 1\n// eslint-disable-next-line @typescript-eslint/no-var-requires,@typescript-eslint/no-require-imports\nimport StreamZip = require(\"node-stream-zip\");\n\n// ZIP 2\nimport * as yauzl from \"yauzl\";\n\n// ZIP 3\nimport * as unzipper from \"unzipper\";\n\n// import * as filehound from \"filehound\";\n\nconsole.log(\"process.cwd():\");\nconsole.log(process.cwd());\n\nconsole.log(\"__dirname:\");\nconsole.log(__dirname);\n\nconst args = process.argv.slice(2);\nconsole.log(\"args:\");\nconsole.log(args);\n\nif (!args[0]) {\n    console.log(\"FILEPATH ARGUMENT IS MISSING.\");\n    process.exit(1);\n}\nconst argPath = args[0].trim();\nlet filePath = argPath;\nconsole.log(filePath);\nif (!fs.existsSync(filePath)) {\n    filePath = path.join(__dirname, argPath);\n    console.log(filePath);\n    if (!fs.existsSync(filePath)) {\n        filePath = path.join(process.cwd(), argPath);\n        console.log(filePath);\n        if (!fs.existsSync(filePath)) {\n            console.log(\"FILEPATH DOES NOT EXIST.\");\n            process.exit(1);\n        }\n    }\n}\n\nconst stats = fs.lstatSync(filePath);\nif (!stats.isFile() && !stats.isDirectory()) {\n    console.log(\"FILEPATH MUST BE FILE OR DIRECTORY.\");\n    process.exit(1);\n}\n\nconst fileName = path.basename(filePath);\nconst ext = path.extname(fileName);\n\nconst argExtra = args[1] ? args[1].trim() : undefined;\nconst READ_ZIP_STREAMS = argExtra === \"1\";\n\nconst UNVERBOSE = false;\nconst VERBOSE = process.env.DEBUG || false;\nconst N_ITERATIONS = (READ_ZIP_STREAMS && VERBOSE) ? 1 : (READ_ZIP_STREAMS ? 5 : 10);\n\nasync function streamReadAll(readStream: NodeJS.ReadableStream): Promise<number> {\n\n    return new Promise<number>((resolve, reject) => {\n\n        let totalBytes = 0;\n\n        const cleanup = () => {\n            readStream.removeListener(\"data\", handleData);\n            readStream.removeListener(\"error\", handleError);\n            readStream.removeListener(\"end\", handleEnd);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const handleError = (err: any) => {\n            cleanup();\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            reject(err);\n        };\n        readStream.on(\"error\", handleError);\n\n        const handleData = (data: Buffer) => {\n            totalBytes += data.length;\n        };\n        readStream.on(\"data\", handleData);\n\n        const handleEnd = () => {\n            cleanup();\n            resolve(totalBytes);\n        };\n        readStream.on(\"end\", handleEnd);\n    });\n}\n\nconst zip1 = async (file: string): Promise<number[]> => {\n    return new Promise<number[]>((resolve, reject) => {\n\n        const zip = new StreamZip({\n            file,\n            storeEntries: true,\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        zip.on(\"error\", (err: any) => {\n            console.log(\"--ZIP error: \" + filePath);\n            console.log(err);\n\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            reject(err);\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        zip.on(\"entry\", (_entry: any) => {\n            // console.log(\"--ZIP: entry\");\n            // console.log(entry.name);\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        zip.on(\"extract\", (entry: any, f: any) => {\n            console.log(\"--ZIP extract:\");\n            console.log(entry.name);\n            console.log(f);\n        });\n\n        zip.on(\"ready\", async () => {\n            // console.log(\"--ZIP: ready\");\n            // console.log(zip.entriesCount);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const zipEntries = Object.values(zip.entries()) as any[];\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const crcs = zipEntries.map((zipEntry: any) => {\n                // if (/\\/$/.test(zipEntry.name)) {\n                if (zipEntry.isDirectory) { // zipEntry.name[zipEntry.name.length - 1] === \"/\"\n                    // skip directories / folders\n                    return 0;\n                } else {\n                    if (!zipEntry.crc && zipEntry.size) {\n                        console.log(`1 CRC zero? ${zipEntry.name} (${zipEntry.size} bytes) => ${zipEntry.crc}`);\n                    }\n                    return zipEntry.crc as number;\n                }\n            }).filter((val: number) => {\n                return val; // falsy includes zero, null, undefined\n            });\n\n            if (READ_ZIP_STREAMS) {\n                if (VERBOSE) {\n                    process.stdout.write(\"## 1 ##\\n\");\n                }\n                for (const zipEntry of zipEntries) {\n                    if (zipEntry.isDirectory) {\n                        continue;\n                    }\n                    const promize = new Promise((res, rej) => {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        zip.stream(zipEntry.name, async (err: any, stream: NodeJS.ReadableStream) => {\n                            if (err) {\n                                console.log(err);\n                                // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                                rej(err);\n                                return;\n                            }\n                            // stream.pipe(process.stdout);\n                            const totalBytes = streamReadAll(stream);\n                            process.nextTick(() => {\n                                res(totalBytes);\n                            });\n                        });\n                    });\n                    const size = await promize;\n                    if (zipEntry.size !== size) {\n                        console.log(`1 SIZE MISMATCH? ${zipEntry.name} ${zipEntry.size} != ${size}`);\n                    }\n\n                    if (VERBOSE) {\n                        process.stdout.write(` ${zipEntry.name} `);\n                    } else if (!UNVERBOSE) {\n                        process.stdout.write(\".\");\n                    }\n                }\n                if (!UNVERBOSE) {\n                    process.stdout.write(\"\\n\");\n                }\n            }\n\n            process.nextTick(() => {\n                zip.close();\n                process.nextTick(() => {\n                    resolve(crcs);\n                });\n            });\n        });\n    });\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(zip1 as any).zipName = \"node-stream-zip\";\n\nconst zip2 = async (file: string): Promise<number[]> => {\n    return new Promise<number[]>((resolve, reject) => {\n        let crcs: number[] | undefined;\n        yauzl.open(file, { lazyEntries: true, autoClose: false }, (error, zip) => {\n            if (error || !zip) {\n                console.log(\"yauzl init ERROR\");\n                console.log(error);\n                // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                reject(error);\n                return;\n            }\n\n            zip.on(\"error\", (erro) => {\n                console.log(\"yauzl ERROR\");\n                console.log(erro);\n                // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                reject(erro);\n            });\n\n            if (READ_ZIP_STREAMS && VERBOSE) {\n                process.stdout.write(\"## 2 ##\\n\");\n            }\n\n            zip.readEntry(); // next (lazyEntries)\n            zip.on(\"entry\", async (zipEntry) => {\n                // if (/\\/$/.test(entry.fileName)) {\n                if (zipEntry.fileName[zipEntry.fileName.length - 1] === \"/\") {\n                    // skip directories / folders\n                } else {\n                    if (!zipEntry.crc32 && zipEntry.uncompressedSize) {\n                        // tslint:disable-next-line:max-line-length\n                        console.log(`2 CRC zero? ${zipEntry.fileName} (${zipEntry.uncompressedSize} bytes) => ${zipEntry.crc32}`);\n                    }\n                    if (!crcs) {\n                        crcs = [];\n                    }\n                    crcs.push(zipEntry.crc32 as number);\n\n                    if (READ_ZIP_STREAMS) {\n                        const promize = new Promise((res, rej) => {\n                            zip.openReadStream(zipEntry, (err, stream) => {\n                                if (err || !stream) {\n                                    console.log(err);\n                                    // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                                    rej(err);\n                                    return;\n                                }\n                                // stream.pipe(process.stdout);\n                                const totalBytes = streamReadAll(stream);\n                                process.nextTick(() => {\n                                    res(totalBytes);\n                                });\n                            });\n                        });\n                        const size = await promize;\n                        if (zipEntry.uncompressedSize !== size) {\n                            // tslint:disable-next-line:max-line-length\n                            console.log(`2 SIZE MISMATCH? ${zipEntry.fileName} ${zipEntry.uncompressedSize} != ${size}`);\n                        }\n\n                        if (VERBOSE) {\n                            process.stdout.write(` ${zipEntry.fileName} `);\n                        } else if (!UNVERBOSE) {\n                            process.stdout.write(\".\");\n                        }\n                    }\n                }\n\n                zip.readEntry(); // next (lazyEntries)\n            });\n\n            zip.on(\"end\", () => {\n                // console.log(\"yauzl END\");\n\n                if (READ_ZIP_STREAMS && !UNVERBOSE) {\n                    process.stdout.write(\"\\n\");\n                }\n\n                process.nextTick(() => {\n                    zip.close(); // not autoClose\n                    process.nextTick(() => {\n                        if (!crcs) {\n                            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                            reject(crcs);\n                            return;\n                        }\n                        resolve(crcs.filter((val) => {\n                            return val; // falsy includes zero, null, undefined\n                        }));\n                    });\n                });\n            });\n\n            zip.on(\"close\", () => {\n                // console.log(\"yauzl CLOSE\");\n            });\n        });\n    });\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(zip2 as any).zipName = \"yauzl\";\n\n// <<< UNZIPPER_BUG\n// https://github.com/ZJONSSON/node-unzipper/issues/104\n// events.js:174\n// throw er; // Unhandled 'error' event\n// Error: EBADF: bad file descriptor, read\n// Emitted 'error' event at:\n// at lazyFs.read (internal/fs/streams.js:165:12)\n// at FSReqWrap.wrapper [as oncomplete] (fs.js:467:17)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst streams: any = {};\n// >>> UNZIPPER_BUG\n\nconst zip3 = async (file: string): Promise<number[]> => {\n    return new Promise<number[]>(async (resolve, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let zip: any;\n        try {\n            zip = await unzipper.Open.file(file);\n        } catch (err) {\n            console.log(err);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n            reject(err);\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const crcs = zip.files.map((zipEntry: any) => {\n            // if (/\\/$/.test(zipEntry.path)) {\n            if (zipEntry.type === \"Directory\") { // zipEntry.path[zipEntry.path.length - 1] === \"/\")\n                // skip directories / folders\n                return 0;\n            } else {\n                if (!zipEntry.crc32 && zipEntry.uncompressedSize) {\n                    // tslint:disable-next-line:max-line-length\n                    console.log(`3 CRC zero? ${zipEntry.path} (${zipEntry.uncompressedSize} bytes) => ${zipEntry.crc32}`);\n                }\n                return zipEntry.crc32 as number;\n            }\n        }).filter((val: number) => {\n            return val; // falsy includes zero, null, undefined\n        });\n\n        if (READ_ZIP_STREAMS) {\n            if (VERBOSE) {\n                process.stdout.write(\"## 3 ##\\n\");\n            }\n            for (const zipEntry of zip.files) {\n                if (zipEntry.type === \"Directory\") {\n                    continue;\n                }\n                const stream = zipEntry.stream();\n\n                // <<< UNZIPPER_BUG\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                stream.on(\"error\", (err: any) => {\n                    console.log(\"err1\");\n                    console.log(err);\n                });\n                stream.__ZIP_FILE_PATH = file;\n                stream.__ZIP_RESOURCE_PATH = zipEntry.path;\n                if (!streams[file]) {\n                    streams[file] = {};\n                }\n                streams[file][zipEntry.path] = stream; // prevents premature garbage collection\n\n                // event sequence: FINISH, then END\n                stream.on(\"end\", () => {\n                    // console.log(`${zipEntry.path} END`);\n\n                    process.nextTick(() => {\n                        // console.log(`${stream.__ZIP_FILE_PATH} ${stream.__ZIP_RESOURCE_PATH} CLEAN`);\n                        // streams[stream.__ZIP_FILE_PATH][stream.__ZIP_RESOURCE_PATH] = null;\n                        delete streams[stream.__ZIP_FILE_PATH][stream.__ZIP_RESOURCE_PATH];\n                    });\n\n                    // setTimeout(() => {\n                    //     return stream; // prevents premature garbage collection\n                    // }, 200);\n                });\n                // >>> UNZIPPER_BUG\n\n                const promize = streamReadAll(stream);\n                let size: number;\n                try {\n                    size = await promize;\n                } catch (err) {\n                    console.log(\"err2\");\n                    console.log(err);\n                    // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n                    reject(err);\n                    return;\n                }\n\n                if (zipEntry.uncompressedSize !== size) {\n                    console.log(`3 SIZE MISMATCH? ${zipEntry.path} ${zipEntry.uncompressedSize} != ${size}`);\n                }\n\n                if (VERBOSE) {\n                    process.stdout.write(` ${zipEntry.path} `);\n                } else if (!UNVERBOSE) {\n                    process.stdout.write(\".\");\n                }\n            }\n            if (!UNVERBOSE) {\n                process.stdout.write(\"\\n\");\n            }\n\n            // <<< UNZIPPER_BUG\n            process.nextTick(() => {\n                // streams[file] = null;\n                delete streams[file];\n            });\n            // >>> UNZIPPER_BUG\n        }\n\n        resolve(crcs);\n    });\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(zip3 as any).zipName = \"unzipper\";\n\nconst zips = READ_ZIP_STREAMS ? [zip1, zip2] : // <<< UNZIPPER_BUG\n    [zip1, zip2, zip3];\n\nasync function processFile(file: string) {\n    console.log(\"=====================================\");\n    if (!UNVERBOSE) {\n        console.log(`${file}`);\n        console.log(\"=====================================\");\n    }\n\n    let winner = 0;\n    let minNanoOverall = Number.MAX_SAFE_INTEGER;\n\n    let iZip = 0;\n    for (const zip of zips) {\n        iZip++;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (zip as any).minNano = Number.MAX_SAFE_INTEGER;\n\n        if (VERBOSE) {\n            console.log(\"-------------------------------\");\n        }\n\n        let crcsPreviousIteration: number[] | undefined;\n        for (let i = 0; i < N_ITERATIONS; i++) {\n            process.stdout.write(`${i + 1}/${N_ITERATIONS} `);\n\n            const time = process.hrtime();\n            const crcs = await zip(file);\n            const diffTime = process.hrtime(time);\n\n            // await new Promise((res, _rej) => {\n            //     setTimeout(() => {\n            //         res();\n            //     }, 100);\n            // });\n\n            const nanos = diffTime[0] * 1e9 + diffTime[1];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (nanos < (zip as any).minNano) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (zip as any).minNano = nanos;\n            }\n            if (nanos < minNanoOverall) {\n                minNanoOverall = nanos;\n                winner = iZip;\n            }\n\n            if (VERBOSE) {\n                // tslint:disable-next-line:max-line-length\n                console.log(`Zip ${iZip} (${crcs.length}): ${diffTime[0]} seconds + ${diffTime[1]} nanoseconds`);\n            }\n\n            // if (crcs.includes(0)) {\n            //     console.log(JSON.stringify(crcs, null, 2));\n            // }\n\n            if (crcsPreviousIteration) {\n                if (!sameArrays(crcsPreviousIteration, crcs)) {\n\n                    console.log(`++++ Zip ${iZip} (ITERATION ${i}) CRC DIFF!?`);\n                    console.log(`-- ${crcsPreviousIteration.length}:`);\n                    console.log(JSON.stringify(crcsPreviousIteration, null, 2));\n                    console.log(`-- ${crcs.length}:`);\n                    console.log(JSON.stringify(crcs, null, 2));\n                    process.exit(1);\n                }\n            }\n            crcsPreviousIteration = crcs;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (zip as any).CRCs = crcsPreviousIteration;\n\n        if (!VERBOSE) {\n            console.log(\"\\n\");\n        }\n\n    }\n\n    let crcsPreviousZip: number[] | undefined;\n    let isDiff = false;\n    for (const zip of zips) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (crcsPreviousZip && (zip as any).CRCs) {\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isDiff = !sameArrays(crcsPreviousZip, (zip as any).CRCs);\n            // if (crcsPreviousZip.length !== (zip as any).CRCs.length) {\n            //     isDiff = true;\n            //     break;\n            // } else {\n            //     for (let j = 0; j < (zip as any).CRCs.length; j++) {\n            //         if ((zip as any).CRCs[j] !== crcsPreviousZip[j]) {\n            //             isDiff = true;\n            //             break;\n            //         }\n            //     }\n            // }\n            if (isDiff) {\n                break;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        crcsPreviousZip = (zip as any).CRCs;\n    }\n    if (isDiff) {\n        console.log(\"CRC DIFF! ##############################################\");\n        iZip = 0;\n        for (const zip of zips) {\n            iZip++;\n            console.log(\"==========================\");\n            console.log(`++++ Zip ${iZip} CRC:`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            console.log(`-- ${(zip as any).CRCs.length}:`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            console.log(JSON.stringify((zip as any).CRCs));\n        }\n\n        for (let j = 0; j < zips.length; j++) {\n            const zip = zips[j];\n            let nDiffs = 0;\n            for (let k = 0; k < zips.length; k++) {\n                if (j === k) {\n                    continue;\n                }\n                const zip_ = zips[k];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (!sameArrays((zip as any).CRCs, (zip_ as any).CRCs)) {\n                    nDiffs++;\n                }\n            }\n            if (nDiffs === (zips.length - 1)) {\n                console.log(\"####################################\");\n                console.log(\"####################################\");\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                console.log(`SUSPECT ====> Zip ${j + 1} (${(zip as any).zipName})`);\n                console.log(\"####################################\");\n                console.log(\"####################################\");\n            }\n        }\n\n        process.exit(1);\n    }\n\n    if (VERBOSE) {\n        console.log(\"=====================================\");\n    }\n\n    iZip = 0;\n    for (const zip of zips) {\n        iZip++;\n        const won = iZip === winner;\n        // tslint:disable-next-line:max-line-length\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        console.log(`${won ? \">>\" : \"--\"} Zip ${iZip} (${(zip as any).zipName}) => ${(zip as any).minNano.toLocaleString()} nanoseconds ${won ? \" [ WINNER ]\" : `[ +${((zip as any).minNano - minNanoOverall).toLocaleString()} ]`}`);\n    }\n}\n\nif (stats.isDirectory()) {\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        // const files: string[] = await filehound.create()\n        //     // .discard(\"node_modules\")\n        //     // .depth(5)\n        //     .paths(filePath)\n        //     .ext([\".epub\", \".epub3\", \".cbz\", \".zip\"])\n        //     // .directory()\n        //     .find();\n        const files = fs.readdirSync(filePath, { withFileTypes: true }).\n            filter((f) => f.isFile() &&\n                /((\\.epub3?)|(\\.zip)|(\\.cbz))$/i.test(f.name)).\n            map((f) => path.join(filePath, f.name));\n\n        for (const file of files) {\n            await processFile(file);\n        }\n    })();\n\n} else if (/((\\.epub3?)|(\\.cbz)|(\\.zip))$/i.test(ext)) {\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        await processFile(filePath);\n    })();\n}\n\nfunction sameArrays(arr1: number[], arr2: number[]) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let j = 0; j < arr1.length; j++) {\n        if (arr1[j] !== arr2[j]) {\n            return false;\n        }\n    }\n    return true;\n}\n"]}