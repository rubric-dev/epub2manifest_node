{"version":3,"file":"ta-json-string-converter.js","sourceRoot":"","sources":["../../../../src/_utils/ta-json-string-converter.ts"],"names":[],"mappings":";;;AASA,MAAa,mBAAmB;IACrB,SAAS,CAAC,QAAgB;QAC7B,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,WAAW,CAAC,KAAgB;QAC/B,OAAO,KAAe,CAAC;IAC3B,CAAC;IAEM,2BAA2B;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAZD,kDAYC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { IPropertyConverter, JsonValue } from \"ta-json-x\";\n\nexport class JsonStringConverter implements IPropertyConverter {\n    public serialize(property: string): JsonValue {\n        return property;\n    }\n\n    public deserialize(value: JsonValue): string {\n        return value as string;\n    }\n\n    public collapseArrayWithSingleItem(): boolean {\n        return true;\n    }\n}\n"]}