{"version":3,"file":"zipFactory.js","sourceRoot":"","sources":["../../../../../src/_utils/zip/zipFactory.ts"],"names":[],"mappings":";;AAiBA,wCAgBC;AA1BD,yBAAyB;AACzB,6BAA0B;AAE1B,+CAA0C;AAE1C,qCAAuC;AACvC,+CAAgD;AAChD,iCAA8B;AAC9B,iCAA8B;AAEvB,KAAK,UAAU,cAAc,CAAC,QAAgB;IACjD,IAAI,IAAA,iBAAM,EAAC,QAAQ,CAAC,EAAE,CAAC;QACnB,MAAM,GAAG,GAAG,IAAI,SAAG,CAAC,QAAQ,CAAC,CAAC;QAC9B,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,OAAO,6BAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;QACD,OAAO,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACrC,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;QACtB,OAAO,oBAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\nimport { URL } from \"url\";\n\nimport { isHTTP } from \"../http/UrlUtils\";\nimport { IZip } from \"./zip\";\nimport { ZipExploded } from \"./zip-ex\";\nimport { ZipExplodedHTTP } from \"./zip-ex-http\";\nimport { Zip1 } from \"./zip1\";\nimport { Zip2 } from \"./zip2\";\n\nexport async function zipLoadPromise(filePath: string): Promise<IZip> {\n    if (isHTTP(filePath)) {\n        const url = new URL(filePath);\n        const p = url.pathname;\n        if (p.endsWith(\"/\")) { // bit hacky? :(\n            return ZipExplodedHTTP.loadPromise(filePath);\n        }\n        return Zip2.loadPromise(filePath);\n    }\n\n    const stats = fs.lstatSync(filePath);\n    if (stats.isDirectory()) {\n        return ZipExploded.loadPromise(filePath);\n    }\n\n    return Zip1.loadPromise(filePath);\n}\n"]}