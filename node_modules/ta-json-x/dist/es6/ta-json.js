import { serialize } from "./methods/serialize";
import { deserialize } from "./methods/deserialize";
// type TFunction<T> = ObjectConstructor["constructor"] & TConstructor<T>;
var TaJson = /** @class */ (function () {
    function TaJson() {
    }
    TaJson.deserialize = function (object, type, options) {
        return deserialize(object, type, options);
    };
    TaJson.parse = function (json, type, options) {
        return this.deserialize(JSON.parse(json), type, options);
    };
    TaJson.serialize = function (value, options) {
        return serialize(value, undefined, options);
    };
    TaJson.stringify = function (object, options) {
        return JSON.stringify(this.serialize(object, options));
    };
    return TaJson;
}());
export { TaJson };
